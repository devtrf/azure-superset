databases:
  - allow_file_upload: true
    database_name: Apex_Snowflake_Analytics
    extra: '{"metadata_params":{},"engine_params":{},"schemas_allowed_for_file_upload":[],"allows_virtual_table_explore":true,"cost_estimate_enabled":true}'
    sqlalchemy_uri: snowflake://RYAN_MEEKINS:XXXXXXXXXX@cw55877.east-us-2.azure/Analytics?role=RYAN_MEEKINS&warehouse=REPORTING
    tables:
      - columns:
          - column_name: PARK_NAME
            type: STRING
          - column_name: Budget
            type: FLOAT
          - column_name: CATEGORY
            type: STRING
          - column_name: Variance
            type: FLOAT
          - column_name: Val
            type: FLOAT
        metrics:
          - expression: count(*)
            metric_name: count
        schema: analytics
        sql:
          "SELECT \"CATEGORY\" AS \"CATEGORY\",\r\n       \"PARK_NAME\" AS \"PARK_NAME\"\
          ,\r\n       CASE\r\n           WHEN CATEGORY IN ('REVENUE',\r\n            \
          \                 'PRODUCTION',\r\n                             'DAM_benefit')\
          \ THEN SUM(VAL)\r\n           ELSE AVG(VAL)\r\n       END AS \"Val\",\r\n  \
          \     CASE\r\n           WHEN CATEGORY IN ('REVENUE',\r\n                  \
          \           'PRODUCTION',\r\n                             'DAM_benefit') THEN\
          \ SUM(VAL_BUDGET)\r\n           ELSE AVG(VAL_BUDGET)\r\n       END AS \"Budget\"\
          ,\r\n       AVG(CASE\r\n               WHEN val_budget is not null THEN (val-val_budget)/val_budget\r\
          \n               else null\r\n           END) AS \"Variance\"\r\nFROM\r\n  (with\
          \ park as\r\n     (SELECT *\r\n      from analytics.park),\r\n        revenue_daily\
          \ as\r\n     (SELECT *\r\n      FROM analytics.revenue_daily),\r\n        day_ahead_market\
          \ as\r\n     (SELECT *\r\n      FROM analytics.day_ahead_market_daily),\r\n\
          \        pha_irradiance as\r\n     (SELECT *\r\n      FROM analytics_staging.pha_irradiance_daily),\r\
          \n        net_gen as\r\n     (SELECT *\r\n      FROM analytics.net_gen_daily),\r\
          \n        budgets as\r\n     (SELECT *\r\n      FROM analytics.budgets_daily_pivoted),\r\
          \n        avg_realized as\r\n     (SELECT *\r\n      FROM analytics.avg_realized_price_daily),\r\
          \n        availability as\r\n     (SELECT *\r\n      FROM analytics_staging.availabilities_daily),\r\
          \n        wind as\r\n     (SELECT *\r\n      FROM analytics.wind_speed_daily),\r\
          \n        actual_pivot as\r\n     (SELECT calendar_id,\r\n             generation_date,\r\
          \n             park_id,\r\n             park.park_name,\r\n             park.project_type,\r\
          \n             total_energy_revenue as Revenue,\r\n             net_gen.daily_net_gen\
          \ as Production,\r\n             CAST(day_ahead_market.day_ahead_market_benefit\
          \ as FLOAT) as DAM_benefit,\r\n             avg_realized.daily_avg_realized_price\
          \ as AVG_realized_price,\r\n             availability.contract_availability,\r\
          \n             availability.BOP_availability,\r\n             availability.project_availability,\r\
          \n             wind.wind_speed_average as wind_speed\r\n      from revenue_daily\r\
          \n      left join park using (park_id)\r\n      FULL OUTER join net_gen using\
          \ (park_id,\r\n                                     calendar_id)\r\n      FULL\
          \ OUTER join day_ahead_market using (park_id,\r\n                          \
          \                    calendar_id)\r\n      FULL OUTER join avg_realized using\
          \ (park_id,\r\n                                          calendar_id)\r\n  \
          \    FULL OUTER join availability using (park_id,\r\n                      \
          \                    calendar_id)\r\n      FULL OUTER join wind using (park_id,\r\
          \n                                  calendar_id)\r\n      where generation_date\
          \ is not null\r\n      order by calendar_id desc),\r\n        budget_pivot as\r\
          \n     (SELECT calendar_id,\r\n             budget_date,\r\n             park_id,\r\
          \n             park.park_name,\r\n             park.project_type,\r\n      \
          \       CAST(case\r\n                      when (energy_revenue_budget::float\
          \ is null\r\n                            or net_gen_budget::float is null) then\
          \ null\r\n                      when (energy_revenue_budget::float = 0\r\n \
          \                           or net_gen_budget::float = 0) then 0\r\n       \
          \               else (energy_revenue_budget::float / net_gen_budget::float)::number(38,\
          \ 15)\r\n                  end as float) as AVG_realized_price,\r\n        \
          \     energy_revenue_budget as Revenue,\r\n             net_gen_budget as Production,\r\
          \n             bop_availability_budget as BOP_availability,\r\n            \
          \ contract_availability_budget as contract_availability,\r\n             project_availability_budget\
          \ as project_availability,\r\n             wind_speed_budget as wind_speed\r\
          \n      from budgets\r\n      left join park using (park_id)\r\n      order\
          \ by calendar_id desc),\r\n        budget_unpivot as\r\n     (SELECT *\r\n \
          \     from budget_pivot unpivot(val_budget\r\n                             \
          \   for category in (Revenue, Production, AVG_realized_price, BOP_availability,\
          \ contract_availability, project_availability, wind_speed))\r\n      order by\
          \ calendar_id desc),\r\n        actual_unpivot as\r\n     (SELECT *\r\n    \
          \  from actual_pivot unpivot(val\r\n                                for category\
          \ in (Revenue, Production, DAM_benefit, AVG_realized_price, BOP_availability,\
          \ contract_availability, project_availability, wind_speed))\r\n      order by\
          \ calendar_id desc) SELECT calendar_id,\r\n                                \
          \        generation_date as actual_generation_date,\r\n                    \
          \                    budget_date,\r\n                                      \
          \  park_id,\r\n                                        park_name,\r\n      \
          \                                  project_type,\r\n                       \
          \                 category,\r\n                                        val,\r\
          \n                                        val_budget\r\n   from actual_unpivot\r\
          \n   full outer join budget_unpivot using (calendar_id,\r\n                \
          \                         park_id,\r\n                                     \
          \    category)\r\n   where generation_date > DATEADD(Day, -30, current_date)\r\
          \n   order by calendar_id desc) AS virtual_table\r\nWHERE \"ACTUAL_GENERATION_DATE\"\
          \ >= CAST('2022-02-28T23:59:59.000000' AS DATETIME)\r\n  AND \"ACTUAL_GENERATION_DATE\"\
          \ <= CAST('2022-03-25T00:00:00.000000' AS DATETIME)\r\nGROUP BY \"CATEGORY\"\
          ,\r\n         \"PARK_NAME\"\r\nORDER BY \"Val\" DESC\r\nLIMIT 1000"
        table_name: tktest analytics.kpi_unpivot 03/25/2022 12:01:16
      - columns:
          - column_name: variance
            expression:
              "CASE\r\n    WHEN val_budget is not null THEN (val-val_budget)/val_budget\r\
              \n    else null\r\nEND"
            extra: "{}"
          - column_name: ACTUAL_GENERATION_DATE
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: BUDGET_DATE
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: VAL_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: CALENDAR_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: PARK_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: VAL
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: CATEGORY
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PARK_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: PROJECT_TYPE
            extra: '{"warning_markdown":null}'
            type: STRING
        metrics:
          - expression: count(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
        schema: analytics_staging
        sql:
          "-- Note: Unless you save your query, these tabs will NOT persist if you\
          \ clear your cookies or change browsers.\r\n\r\nwith park as (SELECT * from\
          \ analytics.park),\r\n\r\nrevenue_daily as (SELECT * FROM analytics.revenue_daily),\r\
          \n\r\nday_ahead_market as (SELECT * FROM analytics.day_ahead_market_daily ),\r\
          \n\r\npha_irradiance as (SELECT *, local_date_id as calendar_id FROM analytics_staging.pha_irradiance_daily),\r\
          \n\r\nnet_gen as (SELECT * FROM analytics.net_gen_daily),\r\n\r\nbudgets as\
          \ (SELECT * FROM analytics.budgets_daily_pivoted),\r\n\r\navg_realized as (SELECT\
          \ * FROM analytics.avg_realized_price_daily),\r\n\r\navailability as (SELECT\
          \ * FROM analytics_staging.availabilities_daily),\r\n\r\nwind as (SELECT * FROM\
          \ analytics.wind_speed_daily),\r\n\r\nsolar_budget as\r\n(select * from analytics_staging.budgets_daily\r\
          \npivot (sum(budget_value) for budget_category in ('irradiation'))\r\n    as\
          \ solar_budget (calendar_id, budget_date, budget_date_end, park_id, source,\
          \ irradiation)\r\nwhere irradiation is not null \r\norder by budget_date desc),\r\
          \n\r\npha_solar_output as \r\n(select local_date_id as calendar_id, CAST(6 AS\
          \ INT) AS park_id, performance_ratio from analytics_staging.pha_performance_ratio_daily),\r\
          \n\r\nactual_pivot as (\r\nSELECT \r\n  calendar_id,\r\n  generation_date,\r\
          \n  park_id,\r\n  park.park_name,\r\n  park.project_type,\r\n  total_energy_revenue\
          \ as Revenue,\r\n  net_gen.daily_net_gen as Production,\r\n  CAST(day_ahead_market.day_ahead_market_benefit\
          \ as FLOAT) as DAM_benefit,\r\n  avg_realized.daily_avg_realized_price as AVG_realized_price,\r\
          \n  pha_irradiance.IRRADIATION as Insolation,  /*no calendar_id in this table\
          \ */\r\n  pha_solar_output.performance_ratio,\r\n  availability.contract_availability,\r\
          \n  availability.BOP_availability,\r\n  availability.project_availability,\r\
          \n  wind.wind_speed_average as wind_speed\r\nfrom revenue_daily\r\nleft join\
          \ park using (park_id)\r\nFULL OUTER join net_gen using (park_id, calendar_id)\r\
          \nFULL OUTER join day_ahead_market using (park_id, calendar_id)\r\nFULL OUTER\
          \ join avg_realized using (park_id, calendar_id)\r\nFULL OUTER join availability\
          \ using (park_id, calendar_id)\r\nFULL OUTER join wind using (park_id, calendar_id)\r\
          \nFULL OUTER join pha_irradiance using (park_id, calendar_id)\r\nFULL OUTER\
          \ join pha_solar_output using (park_id, calendar_id)\r\nwhere generation_date\
          \ is not null\r\norder by calendar_id desc\r\n),\r\n\r\nbudget_pivot as (\r\n\
          SELECT \r\n  calendar_id,\r\n  budget_date,\r\n  park_id,\r\n  park.park_name,\r\
          \n  park.project_type,\r\n  /*pulled from mega_view_mtd.sql line 74 */\r\n \
          \ CAST(case\r\n    when (energy_revenue_budget::float is null or net_gen_budget::float\
          \ is null) then null\r\n    when (energy_revenue_budget::float = 0 or net_gen_budget::float\
          \ = 0) then 0\r\n    else  (energy_revenue_budget::float / net_gen_budget::float)::number(38,15)\r\
          \n  end as float) as AVG_realized_price,\r\n  energy_revenue_budget as Revenue,\r\
          \n  net_gen_budget as Production,\r\n  bop_availability_budget as BOP_availability,\r\
          \n  contract_availability_budget as contract_availability,\r\n  project_availability_budget\
          \ as project_availability,\r\n  wind_speed_budget as wind_speed,\r\n  irradiation\
          \ as Insolation\r\nfrom budgets\r\nleft join park using (park_id)\r\nFULL OUTER\
          \ join solar_budget using (park_id, calendar_id)\r\norder by calendar_id desc\r\
          \n),\r\n\r\n/*\r\nunpivot info:\r\nhttps://docs.snowflake.com/en/sql-reference/constructs/unpivot.html\r\
          \n*/\r\n\r\nbudget_unpivot as (\r\n  SELECT \r\n  *\r\n  from budget_pivot\r\
          \n  unpivot(val_budget for category in (Revenue,Production, AVG_realized_price,\
          \ BOP_availability, contract_availability, project_availability, wind_speed,\
          \ Insolation))\r\n  order by calendar_id desc\r\n),\r\n\r\nactual_unpivot as\
          \ (\r\nSELECT \r\n*\r\nfrom actual_pivot\r\nunpivot(val for category in (Revenue,Production,\
          \ DAM_benefit, AVG_realized_price, BOP_availability, contract_availability,\
          \ project_availability, wind_speed, Insolation, performance_ratio ))\r\norder\
          \ by calendar_id desc\r\n)\r\n\r\n\r\nSELECT \r\n  calendar_id,\r\n  generation_date\
          \ as actual_generation_date,\r\n  budget_date,\r\n  park_id,\r\n  park_name,\r\
          \n  project_type,\r\n  category,\r\n  val,\r\n  val_budget\r\nfrom actual_unpivot\r\
          \nfull outer join budget_unpivot using (calendar_id, park_id, category)\r\n\
          where generation_date > DATEADD(month, -1, current_date) and park_id = 6\r\n\
          order by calendar_id desc"
        table_name: kpi_unpivot_solar
      - columns:
          - column_name: variance
            expression:
              "CASE\r\n    WHEN val_budget is not null THEN (val-val_budget)/val_budget\r\
              \n    else null\r\nEND"
            extra: "{}"
          - column_name: ACTUAL_GENERATION_DATE
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: BUDGET_DATE
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: VAL_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: CALENDAR_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: PARK_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: VAL
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: CATEGORY
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PARK_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: PROJECT_TYPE
            extra: '{"warning_markdown":null}'
            type: STRING
        metrics:
          - expression: count(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
        schema: analytics
        sql:
          "-- Note: Unless you save your query, these tabs will NOT persist if you\
          \ clear your cookies or change browsers.\n\nwith park as (SELECT * from analytics.park),\n\
          \nrevenue_daily as (SELECT * FROM analytics.revenue_daily),\n\nday_ahead_market\
          \ as (SELECT * FROM analytics.day_ahead_market_daily ),\n\npha_irradiance as\
          \ (SELECT * FROM analytics_staging.pha_irradiance_daily),\n\nnet_gen as (SELECT\
          \ * FROM analytics.net_gen_daily),\n\nbudgets as (SELECT * FROM analytics.budgets_daily_pivoted),\n\
          \navg_realized as (SELECT * FROM analytics.avg_realized_price_daily),\n\navailability\
          \ as (SELECT * FROM analytics_staging.availabilities_daily),\n\nwind as (SELECT\
          \ * FROM analytics.wind_speed_daily),\n\nactual_pivot as (\nSELECT \n  calendar_id,\n\
          \  generation_date,\n  park_id,\n  park.park_name,\n  park.project_type,\n \
          \ total_energy_revenue as Revenue,\n  net_gen.daily_net_gen as Production,\n\
          \  CAST(day_ahead_market.day_ahead_market_benefit as FLOAT) as DAM_benefit,\n\
          \  avg_realized.daily_avg_realized_price as AVG_realized_price,\n  /*pha_irradiance.irradiation\
          \ as Insolation, */ /*no calendar_id in this table */\n  availability.contract_availability,\n\
          \  availability.BOP_availability,\n  availability.project_availability,\n  wind.wind_speed_average\
          \ as wind_speed\nfrom revenue_daily\nleft join park using (park_id)\nFULL OUTER\
          \ join net_gen using (park_id, calendar_id)\nFULL OUTER join day_ahead_market\
          \ using (park_id, calendar_id)\nFULL OUTER join avg_realized using (park_id,\
          \ calendar_id)\nFULL OUTER join availability using (park_id, calendar_id)\n\
          FULL OUTER join wind using (park_id, calendar_id)\nwhere generation_date is\
          \ not null\norder by calendar_id desc\n),\n\nbudget_pivot as (\nSELECT \n  calendar_id,\n\
          \  budget_date,\n  park_id,\n  park.park_name,\n  park.project_type,\n  /*pulled\
          \ from mega_view_mtd.sql line 74 */\n  CAST(case\n    when (energy_revenue_budget::float\
          \ is null or net_gen_budget::float is null) then null\n    when (energy_revenue_budget::float\
          \ = 0 or net_gen_budget::float = 0) then 0\n    else  (energy_revenue_budget::float\
          \ / net_gen_budget::float)::number(38,15)\n  end as float) as AVG_realized_price,\n\
          \  energy_revenue_budget as Revenue,\n  net_gen_budget as Production,\n  bop_availability_budget\
          \ as BOP_availability,\n  contract_availability_budget as contract_availability,\n\
          \  project_availability_budget as project_availability,\n  wind_speed_budget\
          \ as wind_speed\nfrom budgets\nleft join park using (park_id)\norder by calendar_id\
          \ desc\n),\n\n/*\nunpivot info:\nhttps://docs.snowflake.com/en/sql-reference/constructs/unpivot.html\n\
          */\n\nbudget_unpivot as (\n  SELECT \n  *\n  from budget_pivot\n  unpivot(val_budget\
          \ for category in (Revenue,Production, AVG_realized_price, BOP_availability,\
          \ contract_availability, project_availability, wind_speed))\n  order by calendar_id\
          \ desc\n),\n\nactual_unpivot as (\nSELECT \n*\nfrom actual_pivot\nunpivot(val\
          \ for category in (Revenue,Production, DAM_benefit, AVG_realized_price, BOP_availability,\
          \ contract_availability, project_availability, wind_speed ))\norder by calendar_id\
          \ desc\n)\n\n\nSELECT \n  calendar_id,\n  generation_date as actual_generation_date,\n\
          \  budget_date,\n  park_id,\n  park_name,\n  project_type,\n  category,\n  val,\n\
          \  val_budget\nfrom actual_unpivot\nfull outer join budget_unpivot using (calendar_id,\
          \ park_id, category)\nwhere generation_date > DATEADD(Day ,-30, current_date)\
          \ \norder by calendar_id desc"
        table_name: kpi_unpivot
      - columns:
          - column_name: variance
            expression:
              "CASE\r\n    WHEN val_budget is not null THEN (val-val_budget)/val_budget\r\
              \n    else null\r\nEND"
            extra: '{"warning_markdown":null}'
          - column_name: ACTUAL_GENERATION_DATE
            expression: ""
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: BUDGET_DATE
            expression: ""
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: VAL_BUDGET
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: CALENDAR_ID
            expression: ""
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: PARK_NAME
            expression: ""
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: VAL
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: CATEGORY
            expression: ""
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PARK_ID
            expression: ""
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: PROJECT_TYPE
            expression: ""
            extra: '{"warning_markdown":null}'
            type: STRING
        main_dttm_col: ACTUAL_GENERATION_DATE
        metrics:
          - expression: count(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
        schema: analytics_staging
        sql:
          "with park as (\r\nSELECT \r\n*\r\nfrom analytics.park\r\n),\r\n\r\nrevenue_daily\
          \ as (SELECT * FROM analytics.revenue_daily),\r\n\r\nday_ahead_market as (SELECT\
          \ * FROM analytics.day_ahead_market_daily ),\r\n\r\npha_irradiance as (SELECT\
          \ * FROM analytics_staging.pha_irradiance_daily),\r\n\r\nnet_gen as (SELECT\
          \ * FROM analytics.net_gen_daily),\r\n\r\nbudgets as (SELECT * FROM analytics.budgets_daily_pivoted),\r\
          \n\r\nactual_pivot as (\r\nSELECT \r\n  calendar_id,\r\n  generation_date,\r\
          \n  park_id,\r\n  park.park_name,\r\n  park.project_type,\r\n  total_energy_revenue\
          \ as Revenue,\r\n  net_gen.daily_net_gen as Production,\r\n  CAST(day_ahead_market.day_ahead_market_benefit\
          \ as FLOAT) as DAM_benefit\r\n  /* pha_irradiance.irradiation as Insolation\
          \ */\r\nfrom revenue_daily\r\nleft join park using (park_id)\r\nFULL OUTER join\
          \ net_gen using (park_id, calendar_id)\r\nFULL OUTER join day_ahead_market using\
          \ (park_id, calendar_id)\r\nwhere generation_date is not null\r\norder by calendar_id\
          \ desc\r\n),\r\n\r\nbudget_pivot as (\r\nSELECT \r\n  calendar_id,\r\n  budget_date,\r\
          \n  park_id,\r\n  park.park_name,\r\n  park.project_type,\r\n  energy_revenue_budget\
          \ as Revenue,\r\n  net_gen_budget as Production\r\nfrom budgets\r\nleft join\
          \ park using (park_id)\r\norder by calendar_id desc\r\n),\r\n\r\n/*\r\nunpivot\
          \ info:\r\nhttps://docs.snowflake.com/en/sql-reference/constructs/unpivot.html\r\
          \n*/\r\n\r\nbudget_unpivot as (\r\n  SELECT \r\n  *\r\n  from budget_pivot\r\
          \n  unpivot(val_budget for category in (Revenue,Production))\r\n  order by calendar_id\
          \ desc\r\n),\r\n\r\nactual_unpivot as (\r\nSELECT \r\n*\r\nfrom actual_pivot\r\
          \nunpivot(val for category in (Revenue,Production, DAM_benefit))\r\norder by\
          \ calendar_id desc\r\n)\r\n\r\n\r\nSELECT \r\n  calendar_id,\r\n  generation_date\
          \ as actual_generation_date,\r\n  budget_date,\r\n  park_id,\r\n  park_name,\r\
          \n  project_type,\r\n  category,\r\n  val,\r\n  val_budget\r\nfrom actual_unpivot\r\
          \nfull outer join budget_unpivot using (calendar_id, park_id, category)\r\n\
          where generation_date > DATEADD(Day ,-30, current_date) \r\norder by calendar_id\
          \ desc "
        table_name: MTD Totals (UNPIVOT)
      - columns:
          - column_name: production variance
            expression: (DAILY_NET_GEN-NET_GEN_BUDGET)/NET_GEN_BUDGET
            extra: '{"warning_markdown":null}'
            type: NUMERIC
          - column_name: availability variance
            expression: (project_availability-project_availability_BUDGET)/project_availability_BUDGET
            extra: '{"warning_markdown":null}'
            type: NUMERIC
          - column_name: wind variance
            expression: (wind_speed_average-wind_speed_budget)/wind_speed_budget
            extra: '{"warning_markdown":null}'
            type: NUMERIC
          - column_name: revenue variance
            expression: (total_energy_revenue-energy_revenue_budget)/energy_revenue_budget
            extra: '{"warning_markdown":null}'
            type: NUMERIC
          - column_name: BUDGET_DATE_END
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: BUDGET_DATE
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: CONTRACT_AVAILABILITY_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: CONTRACT_AVAILABILITY
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: DAY_AHEAD_PARTICIPATION_HOURS
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: BOP_AVAILABILITY_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PROJECT_AVAILABILITY_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: BOP_AVAILABILITY
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: NET_CAPACITY_FACTOR_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PROJECT_AVAILABILITY
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: DAILY_AVG_REALIZED_PRICE
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: DAY_AHEAD_ENERGY_REVENUE
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_ABBREVIATION
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PRE_TAX_CREDIT_VALUE_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: POST_TAX_CREDIT_VALUE_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PRE_TAX_CREDIT_VALUE
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: POST_TAX_CREDIT_VALUE
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: WIND_SPEED_AVERAGE
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: REV_VAR_FROM_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: CALENDAR_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: DAILY_NCF
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: DAILY_NET_GEN
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: REAL_TIME_ENERGY_REVENUE
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: TOTAL_ENERGY_REVENUE
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: ENERGY_PRICE_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: WIND_SPEED_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: ENERGY_REVENUE_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: NET_GEN_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: DAY_AHEAD_AWARDS
            extra: '{"warning_markdown":null}'
          - column_name: DAY_AHEAD_MARKET_BENEFIT
            extra: '{"warning_markdown":null}'
          - column_name: DAY_AHEAD_OPTIMIZATION
            extra: '{"warning_markdown":null}'
          - column_name: DAY_AHEAD_ENERGY
            extra: '{"warning_markdown":null}'
          - column_name: DAY_AHEAD_LMP
            extra: '{"warning_markdown":null}'
          - column_name: MONTHLY_RUNNING_TOTAL_MARKET_BENEFIT
            extra: '{"warning_markdown":null}'
          - column_name: FINANCIAL_ENERGY
            extra: '{"warning_markdown":null}'
          - column_name: UNWTD_DART_SPREAD
            extra: '{"warning_markdown":null}'
          - column_name: REAL_TIME_ENERGY
            extra: '{"warning_markdown":null}'
          - column_name: REAL_TIME_LMP
            extra: '{"warning_markdown":null}'
        metrics:
          - expression: count(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
        schema: analytics_staging
        sql:
          "-- Note: Unless you save your query, these tabs will NOT persist if you\
          \ clear your cookies or change browsers.\n\nSELECT \n*\nfrom analytics_staging.mega_view_daily\n\
          where budget_date = DATEADD(Day, -1, current_date)"
        table_name: Mega View Yesterday
      - columns:
          - column_name: CONTRACT_AVAILABILITY_BUDGET
            expression: ""
            type: FLOAT
          - column_name: CONTRACT_AVAILABILITY
            expression: ""
            type: FLOAT
          - column_name: DAY_AHEAD_PARTICIPATION_HOURS
            expression: ""
            type: INT
          - column_name: BOP_AVAILABILITY_BUDGET
            expression: ""
            type: FLOAT
          - column_name: PROJECT_AVAILABILITY_BUDGET
            expression: ""
            type: FLOAT
          - column_name: BOP_AVAILABILITY
            expression: ""
            type: FLOAT
          - column_name: NET_CAPACITY_FACTOR_BUDGET
            expression: ""
            type: FLOAT
          - column_name: PROJECT_AVAILABILITY
            expression: ""
            type: FLOAT
          - column_name: DAILY_AVG_REALIZED_PRICE
            expression: ""
            type: FLOAT
          - column_name: DAY_AHEAD_ENERGY_REVENUE
            expression: ""
            type: FLOAT
          - column_name: PARK_ABBREVIATION
            expression: ""
            type: STRING
          - column_name: PRE_TAX_CREDIT_VALUE_BUDGET
            expression: ""
            type: FLOAT
          - column_name: POST_TAX_CREDIT_VALUE_BUDGET
            expression: ""
            type: FLOAT
          - column_name: PRE_TAX_CREDIT_VALUE
            expression: ""
            type: FLOAT
          - column_name: POST_TAX_CREDIT_VALUE
            expression: ""
            type: FLOAT
          - column_name: WIND_SPEED_AVERAGE
            expression: ""
            type: FLOAT
          - column_name: BUDGET_DATE_END
            expression: ""
            type: DATETIME
          - column_name: BUDGET_DATE
            expression: ""
            type: DATETIME
          - column_name: REV_VAR_FROM_BUDGET
            expression: ""
            type: FLOAT
          - column_name: CALENDAR_ID
            expression: ""
            type: INT
          - column_name: DAILY_NCF
            expression: ""
            type: FLOAT
          - column_name: DAILY_NET_GEN
            expression: ""
            type: FLOAT
          - column_name: REAL_TIME_ENERGY_REVENUE
            expression: ""
            type: FLOAT
          - column_name: TOTAL_ENERGY_REVENUE
            expression: ""
            type: FLOAT
          - column_name: PARK_NAME
            expression: ""
            type: STRING
          - column_name: ENERGY_PRICE_BUDGET
            expression: ""
            type: FLOAT
          - column_name: IS_ACTIVE
            expression: ""
            type: BOOL
          - column_name: WIND_SPEED_BUDGET
            expression: ""
            type: FLOAT
          - column_name: ENERGY_REVENUE_BUDGET
            expression: ""
            type: FLOAT
          - column_name: NET_GEN_BUDGET
            expression: ""
            type: FLOAT
          - column_name: PARK_ID
            expression: ""
            type: INT
          - column_name: PROJECT_TYPE
            expression: ""
            type: STRING
          - column_name: DAY_AHEAD_AWARDS
            expression: ""
          - column_name: DAY_AHEAD_MARKET_BENEFIT
            expression: ""
          - column_name: DAY_AHEAD_OPTIMIZATION
            expression: ""
          - column_name: DAY_AHEAD_ENERGY
            expression: ""
          - column_name: DAY_AHEAD_LMP
            expression: ""
          - column_name: MONTHLY_RUNNING_TOTAL_MARKET_BENEFIT
            expression: ""
          - column_name: FINANCIAL_ENERGY
            expression: ""
          - column_name: UNWTD_DART_SPREAD
            expression: ""
          - column_name: REAL_TIME_ENERGY
            expression: ""
          - column_name: REAL_TIME_LMP
            expression: ""
        metrics:
          - expression: count(*)
            extra: '{"warning_markdown":null}'
            metric_name: count
        schema: analytics_staging
        sql:
          "with park as (\nSELECT \npark_id, \nproject_type,\nis_active\nfrom analytics.park\n\
          )\n\nSELECT \n*\nfrom analytics_staging.mega_view_daily\nleft join park using\
          \ (park_id)\nwhere budget_date >= DATEADD(year, -1, current_date) and budget_date\
          \ <= DATEADD(day, 1, current_date)"
        table_name: Mega View Last 365
      - columns:
          - column_name: MONTH_INTERVAL_BEG
            expression: ""
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: WIND_SPEED_AVERAGE
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_NAME
            expression: ""
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: WIND_SPEED_BUDGET
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: NET_GEN_BUDGET
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_ID
            expression: ""
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: MONTHLY_NET_GEN
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: MONTH_ID
            expression: ""
            extra: '{"warning_markdown":null}'
            type: INT
        main_dttm_col: MONTH_INTERVAL_BEG
        metrics:
          - expression: AVG(WIND_SPEED_Budget)
            extra: '{"warning_markdown":""}'
            metric_name: Budget Wind Speed
            verbose_name: ""
          - expression: AVG(MONTHLY_NET_GEN)
            extra: '{"warning_markdown":""}'
            metric_name: Actual Generation
            verbose_name: ""
          - expression: AVG(NET_GEN_BUDGET)
            extra: '{"warning_markdown":""}'
            metric_name: Budget Generation
            verbose_name: ""
          - expression: AVG(WIND_SPEED_AVERAGE)
            extra: '{"warning_markdown":""}'
            metric_name: Actual Wind Speed
        schema: analytics
        sql:
          "with wind_speed as (\r\n  SELECT \r\n    *\r\n  FROM analytics.analytics.wind_speed_monthly\r\
          \n),\r\n\r\n\r\nnet_gen as (\r\n  select\r\n    *\r\n  from \r\n    analytics.analytics.net_gen_monthly\r\
          \n),\r\n\r\nbudgets as (\r\n  select\r\n    *\r\n  from \r\n    analytics.analytics.budgets_monthly_pivoted\r\
          \n),\r\n\r\nmonth as (\r\n  SELECT \r\n    month_id\r\n  FROM \r\n    analytics.month\r\
          \n),\r\n\r\npark as (\r\n  SELECT \r\n    park_id,\r\n    park_name,\r\n   \
          \ park_abbreviation\r\n  FROM \r\n    analytics.park\r\n)\r\n\r\nSELECT \r\n\
          month_id,\r\nbudgets.month_interval_beg,\r\npark_id,\r\npark.park_name,\r\n\
          wind_speed.wind_speed_average,\r\nnet_gen.monthly_net_gen,\r\nbudgets.wind_speed_budget,\r\
          \nbudgets.net_gen_budget\r\nFROM \r\nwind_speed\r\nFULL OUTER JOIN net_Gen using\
          \ (month_id, park_id)\r\nFULL OUTER JOIN budgets using (month_id, park_id)\r\
          \nFULL OUTER JOIN month using(month_id)\r\nLeft JOIN park using (park_id)\r\n\
          order by month.month_id desc"
        table_name: Actual Generation and Windspeed vs. Budget
      - columns:
          - column_name: SITE_COD
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: dummy value
            expression: "1"
            extra: "{}"
          - column_name: IGNITION_PARK_ABBREVIATION
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PARK_ABBREVIATION
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: BALANCING_AUTHORITY
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: MAINTENANCE_PROVIDER
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: ENERGY_MANAGER
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: TRANSMISSION_OPERATOR
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PARK_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: IS_ACTIVE_HSE
            extra: '{"warning_markdown":null}'
            type: BOOL
          - column_name: IS_ACTIVE_PF
            extra: '{"warning_markdown":null}'
            type: BOOL
          - column_name: IS_ACTIVE
            extra: '{"warning_markdown":null}'
            type: BOOL
          - column_name: LOCAL_OLSON_TIME_ZONE
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PNODE_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PF_PARK_ID
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PARK_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: MARKET_OLSON_TIME_ZONE
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: MARKET
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: STATE
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: NUMBER_OF_TURBINES
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: TURBINE_MODEL
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: INTERCONNECT
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PROJECT_TYPE
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: OEM
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: OWNER
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: ISO
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: NAMEPLATE_MWH
            extra: '{"warning_markdown":null}'
          - column_name: ROTOR_DIAMETER
            extra: '{"warning_markdown":null}'
          - column_name: LATITUDE
            extra: '{"warning_markdown":null}'
          - column_name: TURBINE_OUTPUT
            extra: '{"warning_markdown":null}'
          - column_name: LONGITUDE
            extra: '{"warning_markdown":null}'
          - column_name: TOWER_HEIGHT
            extra: '{"warning_markdown":null}'
        metrics:
          - expression: count(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
        schema: analytics
        sql: "SELECT *\r\nFROM analytics.park\r"
        table_name: Park Info
      - columns:
          - column_name: MONTH_INTERVAL_BEG
            expression: ""
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: PARK_NAME
            expression: ""
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: CUMSUM_NET_GEN_BUDGET
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: NET_GEN_BUDGET
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: CUMSUM_MONTHLY_NET_GEN
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_ID
            expression: ""
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: MONTHLY_NET_GEN
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: MONTH_ID
            expression: ""
            extra: '{"warning_markdown":null}'
            type: INT
        main_dttm_col: MONTH_INTERVAL_BEG
        metrics:
          - expression: SUM(CUMSUM_NET_GEN_BUDGET)
            extra: '{"warning_markdown":""}'
            metric_name: Net Generation Budget
            verbose_name: Net Generation Budget
          - expression: SUM(CUMSUM_MONTHLY_NET_GEN)
            extra: '{"warning_markdown":""}'
            metric_name: Net Generation
            verbose_name: Net Generation
        schema: analytics
        sql:
          "with net_gen as (\r\n  SELECT \r\n    *\r\n  FROM analytics.net_gen_monthly\r\
          \n),\r\n\r\nbudget_gen as (\r\n  SELECT \r\n    *\r\n  FROM analytics.budgets_monthly_pivoted\r\
          \n),\r\n\r\npark as (\r\n  SELECT \r\n    park_id,\r\n    park_name\r\n  from\
          \ analytics.park\r\n)\r\n\r\nSELECT \r\nmonth_id,\r\nmonth_interval_beg,\r\n\
          park_id, \r\npark.park_name,\r\nnet_gen.monthly_net_gen,\r\nsum(net_gen.monthly_net_gen)\
          \ OVER (PARTITION BY park_id, park_id ORDER BY date_trunc('month', month_interval_end))\
          \ AS CUMSUM_monthly_net_gen,\r\nnet_gen_budget,\r\nsum(net_gen_budget) OVER\
          \ (PARTITION BY park_id, park_id ORDER BY date_trunc('month', month_interval_end))\
          \ AS CUMSUM_net_gen_budget\r\nFROM \r\nbudget_gen\r\nLeft JOIN park using(park_id)\r\
          \nFULL OUTER JOIN net_gen using (month_id, park_id)\r\nwhere month_id >= 20220101\
          \ and \r\n      month_id <= 20221201 \r\norder by month_id desc"
        table_name: Cumulative generation Budget vs. Actual
      - columns:
          - column_name: <new column>
            expression: <enter SQL expression here>
            extra: "{}"
          - column_name: MONTH_GENERATED_INTERVAL_BEG
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: WIND_SPEED_AVERAGE
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: WIND_SPEED_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: NET_GEN_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: MONTHLY_NET_GEN
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: MONTH_ID
            extra: '{"warning_markdown":null}'
            type: INT
        main_dttm_col: MONTH_GENERATED_INTERVAL_BEG
        metrics:
          - description: this is the summation of net_gen budget
            expression: SUM(NET_GEN_BUDGET)
            extra: '{"warning_markdown":""}'
            metric_name: Sum Net Gen Budget
            verbose_name: this is the summation of net_gen budget
        schema: analytics
        sql:
          "with wind_speed as (\r\n  SELECT \r\n    *\r\n  FROM analytics.analytics.wind_speed_monthly\r\
          \n),\r\n\r\n\r\nnet_gen as (\r\n  select\r\n    *\r\n  from \r\n    analytics.analytics.net_gen_monthly\r\
          \n),\r\n\r\nbudgets as (\r\n  select\r\n    *\r\n  from \r\n    analytics.analytics.budgets_monthly_pivoted\r\
          \n),\r\n\r\nmonth as (\r\n  SELECT \r\n    month_id\r\n  FROM \r\n    analytics.month\r\
          \n)\r\n\r\nSELECT \r\nmonth_id,\r\nnet_gen.month_generated_interval_beg,\r\n\
          park_id,\r\nwind_speed.park_name,\r\nwind_speed.wind_speed_average,\r\nnet_gen.monthly_net_gen,\r\
          \nbudgets.wind_speed_budget,\r\nbudgets.net_gen_budget\r\nFROM \r\nwind_speed\r\
          \nFULL OUTER JOIN net_Gen using (month_id, park_id)\r\nFULL OUTER JOIN budgets\
          \ using (month_id, park_id)\r\nFULL OUTER JOIN month using(month_id)\r\nwhere\
          \ month.month_id <= 20220601 /*and Park_id = 6*/\r\norder by month.month_id\
          \ desc"
        table_name: Actual Generation and Windspeed vs. Budget 03/30/2022 13:27:54
      - columns:
          - column_name: MONTH_INTERVAL_BEG
            expression: ""
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: CONTRACT_AVAILABILITY_BUDGET
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: CONTRACT_AVAILABILITY
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PROJECT_AVAILABILITY_BUDGET
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: BOP_AVAILABILITY
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PROJECT_AVAILABILITY
            expression: ""
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_NAME
            expression: ""
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PARK_ID
            expression: ""
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: MONTH_ID
            expression: ""
            extra: '{"warning_markdown":null}'
            type: INT
        main_dttm_col: MONTH_INTERVAL_BEG
        metrics:
          - expression: avg(Contract_Availability_Budget)
            extra: '{"warning_markdown":""}'
            metric_name: Contract Availability Budget
            verbose_name: ""
          - expression: avg(Project_Availability)
            extra: '{"warning_markdown":""}'
            metric_name: Site Availability Budget
            verbose_name: ""
          - expression: avg(Contract_Availability)
            extra: '{"warning_markdown":""}'
            metric_name: Contract Availability
            verbose_name: ""
          - expression: avg(Project_Availability_budget)
            extra: '{"warning_markdown":""}'
            metric_name: Site Availability
        schema: analytics
        sql:
          "with avail as (\nSELECT month_interval_beg,\n       month_id,\n       park_id,\n\
          \       park_name,\n       project_availability,\n       bop_availability,\n\
          \       contract_availability\nFROM analytics.availabilities\n),\n\nbudget as\
          \ (\n  SELECT \n    *\n  FROM analytics.budgets_monthly_pivoted\n)\n\nSELECT\
          \ \nmonth_interval_beg,\nmonth_id,\npark_id,\npark_name,\nproject_availability,\n\
          bop_availability,\ncontract_availability,\nbudget.contract_availability_budget,\n\
          budget.project_availability_budget\nfrom avail\nOUTER JOIN budget using (month_id,\
          \ park_id)\n"
        table_name: Availabilities vs Budget
      - cache_timeout: 43200
        columns:
          - column_name: local_interval_beg
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: utc_interval_beg
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: utc_enqueued_time
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: utc_datetime
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: local_date_id_interval_beg
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: utc_date_id_interval_beg
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: local_time_id_interval_beg
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: utc_time_id_interval_beg
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: park_id
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: timestamp_int
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: sequence_number
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: offset_number
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: local_olson_time_zone
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: topic_edge_node_id
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: ignition_park_abbreviation
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: tag_data_type
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: ignition_tag_name
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: topic_device_id
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: park_abbreviation
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: topic_namespace
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: topic_type
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: granularity
            extra: '{"warning_markdown":null}'
            type: VARCHAR(3)
          - column_name: tag_value
            extra: '{"warning_markdown":null}'
            type: VARIANT
          - column_name: system_properties
            extra: '{"warning_markdown":null}'
            type: VARIANT
          - column_name: properties
            extra: '{"warning_markdown":null}'
            type: VARIANT
        main_dttm_col: utc_datetime
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        sql: ""
        table_name: stg_ignition_raw
      - columns:
          - column_name: LOCAL_DATETIME
            expression: ""
            type: DATETIME
          - column_name: WDT_GENERATION_FORECAST
            expression: ""
            type: FLOAT
          - column_name: TNSK_GENERATION_FORECAST
            expression: ""
            type: FLOAT
          - column_name: UTC_DATETIME
            expression: ""
            type: DATETIME
          - column_name: PARK_NAME
            expression: ""
            type: STRING
          - column_name: PARK_ID
            expression: ""
            type: INT
          - column_name: PROJECT_TYPE
            expression: ""
            type: STRING
          - column_name: WIND_SPEED_80M_MS
            expression: ""
          - column_name: SRAD_WM2
            expression: ""
        main_dttm_col: LOCAL_DATETIME
        metrics:
          - expression: SUM(TNSK_GENERATION_FORECAST)
            extra: '{"warning_markdown":""}'
            metric_name: TNSK (MWh)
            verbose_name: TNSK (MWh)
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        sql:
          "with forcast as (\r\nSELECT \r\n  utc_datetime,\r\n  local_datetime,\r\n\
          \  park_id,\r\n  tnsk_generation_forecast,\r\n  wdt_generation_forecast\r\n\
          FROM \r\n  analytics_staging.gen_forecast_hourly\r\n),\r\n\r\npark as (\r\n\
          SELECT \r\npark_id, \r\npark_name,\r\npark_abbreviation,\r\nproject_type,\r\n\
          is_active\r\nfrom analytics.park\r\n),\r\n\r\nweather as (\r\nSELECT \r\n  utc_datetime,\r\
          \n  local_datetime,\r\n  park_id,\r\n  park_name,\r\n  wind_speed_80m_ms,\r\n\
          \  srad_wm2\r\nFROM analytics_staging.weather_forecast_hourly\r\nwhere wind_speed_80m_ms\
          \ is not null and srad_wm2 is not null \r\nand utc_datetime <= DATEADD(Day ,3\
          \ , current_date) and  utc_datetime >= DATEADD(Day ,-3 , current_date)\r\norder\
          \ by local_datetime desc\r\n)\r\n\r\n\r\nSELECT \r\n  utc_datetime,\r\n  local_datetime,\r\
          \n  park_id,\r\n  park.project_type,\r\n  weather.park_name,\r\n  tnsk_generation_forecast,\r\
          \n  wdt_generation_forecast,\r\n  weather.wind_speed_80m_ms,\r\n  weather.srad_wm2\r\
          \nFROM \r\nforcast\r\nright JOIN weather using (local_datetime, park_id)\r\n\
          left join park using (park_id)\r\norder by local_datetime desc\r\n"
        table_name: Day-Ahead Forecast
      - columns:
          - column_name: dbt_incremental_model_update_time
            is_dttm: true
            type: TIMESTAMP_LTZ
          - column_name: last_load_time
            is_dttm: true
            type: TIMESTAMP_LTZ
          - column_name: pipe_received_time
            is_dttm: true
            type: TIMESTAMP_LTZ
          - column_name: first_commit_time
            is_dttm: true
            type: TIMESTAMP_LTZ
          - column_name: utc_last_load_time_ntz
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: file_path_timestamp
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: utc_last_load_time
            is_dttm: true
            type: TIMESTAMP_TZ
          - column_name: id
            type: DECIMAL(19, 0)
          - column_name: first_error_character_pos
            type: DECIMAL(38, 0)
          - column_name: first_error_line_number
            type: DECIMAL(38, 0)
          - column_name: table_catalog_id
            type: DECIMAL(38, 0)
          - column_name: table_schema_id
            type: DECIMAL(38, 0)
          - column_name: event_hub_partition
            type: DECIMAL(38, 0)
          - column_name: table_id
            type: DECIMAL(38, 0)
          - column_name: row_parsed
            type: DECIMAL(38, 0)
          - column_name: error_count
            type: DECIMAL(38, 0)
          - column_name: row_count
            type: DECIMAL(38, 0)
          - column_name: file_size
            type: DECIMAL(38, 0)
          - column_name: error_limit
            type: DECIMAL(38, 0)
          - column_name: file_path_in_partition
            type: VARCHAR(16777216)
          - column_name: first_error_column_name
            type: VARCHAR(16777216)
          - column_name: table_catalog_name
            type: VARCHAR(16777216)
          - column_name: table_schema_name
            type: VARCHAR(16777216)
          - column_name: pipe_catalog_name
            type: VARCHAR(16777216)
          - column_name: pipe_schema_name
            type: VARCHAR(16777216)
          - column_name: first_error_message
            type: VARCHAR(16777216)
          - column_name: table_name
            type: VARCHAR(16777216)
          - column_name: stage_location
            type: VARCHAR(16777216)
          - column_name: file_name
            type: VARCHAR(16777216)
          - column_name: pipe_name
            type: VARCHAR(16777216)
          - column_name: status
            type: VARCHAR(16777216)
        main_dttm_col: last_load_time
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        table_name: stg_ignition_snowpipe_copy_history
      - columns:
          - column_name: MONTH_INTERVAL_BEG
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: PARK_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PARK_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: MONTH_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: TOTAL_NEAR_MISS_YTD
            extra: '{"warning_markdown":null}'
          - column_name: TOTAL_RECORD_YTD
            extra: '{"warning_markdown":null}'
          - column_name: TOTAL_HOURS_YTD
            extra: '{"warning_markdown":null}'
          - column_name: TRIR
            extra: '{"warning_markdown":null}'
        main_dttm_col: MONTH_INTERVAL_BEG
        metrics:
          - expression: MAX(TOTAL_HOURS_YTD)
            extra: "{}"
            metric_name: Total Labor Hours
            verbose_name: Total Labor Hours
          - expression: MAX(TOTAL_NEAR_MISS_YTD)
            extra: "{}"
            metric_name: Near Miss
            verbose_name: Near Misses
          - expression: MAX(TOTAL_RECORD_YTD)
            extra: "{}"
            metric_name: Recordables
            verbose_name: Recordable Incidents
          - expression: MAX(TRIR)
            extra: '{"warning_markdown":""}'
            metric_name: TRIR
            verbose_name: TRIR
        schema: analytics
        sql:
          "-- Note: Unless you save your query, these tabs will NOT persist if you\
          \ clear your cookies or change browsers.\n\nSELECT month_id,\n       month_interval_beg,\n\
          \       park_id,\n       park_name,\n       total_hours_ytd,\n       total_near_miss_ytd,\n\
          \       total_record_ytd,\n       trir\nFROM analytics.safety_annual"
        table_name: Safety Summary YTD
      - columns:
          - column_name: site_cod
            is_dttm: true
            type: TIMESTAMP_TZ
          - column_name: number_of_turbines
            type: DECIMAL(38, 0)
          - column_name: park_id
            type: DECIMAL(38, 0)
          - column_name: nameplate_mwh
            type: DECIMAL(38, 6)
          - column_name: rotor_diameter
            type: DECIMAL(38, 6)
          - column_name: turbine_output
            type: DECIMAL(38, 6)
          - column_name: tower_height
            type: DECIMAL(38, 6)
          - column_name: latitude
            type: DECIMAL(38, 6)
          - column_name: longitude
            type: DECIMAL(38, 6)
          - column_name: local_olson_time_zone
            type: VARCHAR(16777216)
          - column_name: market_olson_time_zone
            type: VARCHAR(16777216)
          - column_name: ignition_park_abbreviation
            type: VARCHAR(16777216)
          - column_name: pf_park_id
            type: VARCHAR(16777216)
          - column_name: park_abbreviation
            type: VARCHAR(16777216)
          - column_name: balancing_authority
            type: VARCHAR(16777216)
          - column_name: maintenance_provider
            type: VARCHAR(16777216)
          - column_name: energy_manager
            type: VARCHAR(16777216)
          - column_name: transmission_operator
            type: VARCHAR(16777216)
          - column_name: park_name
            type: VARCHAR(16777216)
          - column_name: pnode_name
            type: VARCHAR(16777216)
          - column_name: turbine_model
            type: VARCHAR(16777216)
          - column_name: project_type
            type: VARCHAR(16777216)
          - column_name: market
            type: VARCHAR(16777216)
          - column_name: state
            type: VARCHAR(16777216)
          - column_name: interconnect
            type: VARCHAR(16777216)
          - column_name: oem
            type: VARCHAR(16777216)
          - column_name: owner
            type: VARCHAR(16777216)
          - column_name: iso
            type: VARCHAR(16777216)
          - column_name: is_active_hse
            type: BOOLEAN
          - column_name: is_active_pf
            type: BOOLEAN
          - column_name: is_active
            type: BOOLEAN
        main_dttm_col: site_cod
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: analytics
        table_name: park
      - columns:
          - column_name: GENERATION_DATE
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: revenue_variance
            expression: (revenue-revenue_budget)/revenue_budget
            extra: '{"warning_markdown":null}'
          - column_name: CALENDAR_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: PARK_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PRODUCTION_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: REVENUE_BUDGET
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PRODUCTION
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: REVENUE
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: DAM_BENEFIT
            extra: '{"warning_markdown":null}'
        main_dttm_col: GENERATION_DATE
        metrics:
          - expression: count(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
        schema: analytics
        sql:
          "with park as (\r\nSELECT \r\npark_id, \r\npark_name,\r\npark_abbreviation\r\
          \nfrom analytics.park\r\n),\r\n\r\nrevenue_daily as (\r\nSELECT \r\n*\r\nFROM\
          \ analytics.revenue_daily\r\n),\r\n\r\nday_ahead_market as (\r\nSELECT\r\n*\r\
          \nFROM analytics.day_ahead_market_daily\r\n),\r\n\r\npha_irradiance as (\r\n\
          SELECT \r\n*\r\nFROM analytics_staging.pha_irradiance_daily\r\n),\r\n\r\nnet_gen\
          \ as (\r\nSELECT \r\n*\r\nFROM analytics.net_gen_daily\r\n),\r\n\r\nbudgets\
          \ as(\r\nSELECT *\r\nFROM analytics.budgets_daily_pivoted\r\n)\r\n\r\n\r\nSELECT\
          \ \r\ncalendar_id,\r\ngeneration_date,\r\npark.park_id,\r\npark.park_name,\r\
          \ntotal_energy_revenue as Revenue,\r\nbudgets.energy_revenue_budget as Revenue_Budget,\r\
          \nnet_gen.daily_net_gen as Production,\r\nbudgets.net_gen_budget as Production_Budget,\r\
          \nday_ahead_market.day_ahead_market_benefit as DAM_benefit\r\n/* pha_irradiance.irradiation\
          \ as Insolation */\r\nfrom revenue_daily\r\nleft join park using (park_id)\r\
          \nFULL OUTER join net_gen using (park_id, calendar_id)\r\nFULL OUTER join day_ahead_market\
          \ using (park_id, calendar_id)\r\nFULL OUTER join budgets using (park_id, calendar_id)\r\
          \nwhere generation_date is not null \r\norder by calendar_id desc"
        table_name: MTD Totals
      - columns:
          - column_name: PARK_ABBREVIATION
            expression: ""
            type: STRING
          - column_name: MONTH_GENERATED_INTERVAL_BEG
            expression: ""
            type: DATETIME
          - column_name: MONTH_INTERVAL_END
            expression: ""
            type: DATETIME
          - column_name: TOTAL_ENERGY_REVENUE
            expression: ""
            type: FLOAT
          - column_name: PARK_NAME
            expression: ""
            type: STRING
          - column_name: IS_ACTIVE
            expression: ""
            type: BOOL
          - column_name: ENERGY_REVENUE_BUDGET
            expression: ""
            type: FLOAT
          - column_name: PARK_ID
            expression: ""
            type: INT
          - column_name: PROJECT_TYPE
            expression: ""
            type: STRING
          - column_name: MONTH_ID
            expression: ""
            type: INT
        main_dttm_col: MONTH_INTERVAL_END
        metrics:
          - expression: count(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
        schema: analytics
        sql:
          "with park as (\r\nSELECT \r\npark_id, \r\npark_name,\r\npark_abbreviation,\r\
          \nproject_type,\r\nis_active\r\nfrom analytics.park\r\n),\r\n\r\nrevenue as(\
          \ SELECT * from analytics.revenue_monthly),\r\n\r\nbudgets as (SELECT* from\
          \ analytics.budgets_monthly_pivoted)\r\n\r\nSELECT \r\nmonth_id,\r\nmonth_generated_interval_beg,\r\
          \nmonth_interval_end,\r\npark_id, \r\npark.park_name,\r\npark.park_abbreviation,\r\
          \npark.project_type,\r\npark.is_active,\r\nrevenue.total_energy_revenue,\r\n\
          energy_revenue_budget\r\nFROM \r\nbudgets\r\nleft join park using (park_id)\r\
          \nleft join revenue using (park_id, month_id)\r\norder by month_id desc"
        table_name: Actual Revenue versus Budget
      - columns:
          - column_name: MONTH_INTERVAL_BEG
            is_dttm: true
            type: DATETIME
          - column_name: CONTRACT_AVAILABILITY
            type: FLOAT
          - column_name: BOP_AVAILABILITY
            type: FLOAT
          - column_name: PROJECT_AVAILABILITY
            type: FLOAT
          - column_name: PARK_NAME
            type: STRING
          - column_name: PARK_ID
            type: INT
          - column_name: MONTH_ID
            type: INT
        metrics:
          - expression: count(*)
            metric_name: count
        schema: analytics
        sql:
          "-- Note: Unless you save your query, these tabs will NOT persist if you\
          \ clear your cookies or change browsers.\nSELECT month_interval_beg,\n     \
          \  month_id,\n       park_id,\n       park_name,\n       project_availability,\n\
          \       bop_availability,\n       contract_availability\nFROM analytics.availabilities"
        table_name: AVAILABILITIES
      - columns:
          - column_name: month_generated_interval_beg
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: month_generated_interval_end
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: rn
            extra: '{"warning_markdown":null}'
            type: DECIMAL(18, 0)
          - column_name: source_rn
            extra: '{"warning_markdown":null}'
            type: DECIMAL(1, 0)
          - column_name: park_id
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: month_id
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: source
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: monthly_net_gen
            extra: '{"warning_markdown":null}'
            type: FLOAT
        main_dttm_col: month_generated_interval_beg
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics
        sql:
          "SELECT \n      park.park_name, \n      net_gen_monthly.*\nFROM analytics.net_gen_monthly\n\
          left join \"ANALYTICS\".\"ANALYTICS\".\"PARK\"  using (Park_id)\n"
        table_name: net_gen_monthly
      - columns:
          - column_name: GENERATION_DATE
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: GENERATION_DATE_END
            extra: '{"warning_markdown":null}'
            type: DATETIME
          - column_name: CALENDAR_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: DAILY_NET_GEN
            extra: '{"warning_markdown":null}'
            type: FLOAT
          - column_name: PARK_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: SOURCE_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: PARK_ID
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: SOURCE_RN
            extra: '{"warning_markdown":null}'
            type: INT
          - column_name: RN
            extra: '{"warning_markdown":null}'
            type: INT
        main_dttm_col: GENERATION_DATE
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics
        sql:
          "SELECT \n      park.park_name, \n      net_gen_daily.*\nFROM analytics.net_gen_daily\n\
          \nleft join analytics.analytics.park park using (park_id)"
        table_name: net_gen_daily
      - columns:
          - column_name: published_local_datetime
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: published_utc_datetime
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: utc_datetime
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: _loaded_at
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_TZ
          - column_name: market_id
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: published_date
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: forecast_zone
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: feed_name
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: published_hour
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: date
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: forecast_value
            extra: '{"warning_markdown":null}'
            type: FLOAT
        main_dttm_col: utc_datetime
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        sql: ""
        table_name: stg_morningstar_ercot_sevendayloadforecastloadzoneabsolute
      - columns:
          - column_name: published_local_datetime
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: published_utc_datetime
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: utc_datetime
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: _loaded_at
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_TZ
          - column_name: market_id
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: published_date
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: forecast_zone
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: feed_name
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: published_hour
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: date
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: forecast_value
            extra: '{"warning_markdown":null}'
            type: FLOAT
        main_dttm_col: utc_datetime
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        sql: ""
        table_name: stg_morningstar_ercot_sevendayloadforecastweatherzoneabsolute
      - columns:
          - column_name: CONTRACT_AVAILABILITY
            type: FLOAT
          - column_name: BOP_AVAILABILITY
            type: FLOAT
          - column_name: PROJECT_AVAILABILITY
            type: FLOAT
          - column_name: CALENDAR_ID
            type: INT
          - column_name: PARK_ID
            type: INT
          - column_name: MONTH_ID
            type: INT
        metrics:
          - expression: count(*)
            metric_name: count
        schema: analytics_staging
        sql:
          "-- Note: Unless you save your query, these tabs will NOT persist if you\
          \ clear your cookies or change browsers.\nSELECT park_id,\n       calendar_id,\n\
          \       month_id,\n       project_availability,\n       bop_availability,\n\
          \       contract_availability\nFROM analytics_staging.availabilities_daily"
        table_name: AVAILABILITIES_DAILY
      - columns:
          - column_name: test_execution_time
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_LTZ
          - column_name: metadata_last_updated_at
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_TZ
          - column_name: number_of_failures
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: test_table_name
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: test_name
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: raw_sql
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: description
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: model
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: severity
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: test_result
            extra: '{"warning_markdown":null}'
            type: VARCHAR(7)
        main_dttm_col: test_execution_time
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        sql: ""
        table_name: most_recent_dbt_test_results
      - columns:
          - column_name: test_execution_time
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_LTZ
          - column_name: metadata_last_updated_at
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_TZ
          - column_name: number_of_failures
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: test_table_name
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: test_name
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: raw_sql
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: description
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: model
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: severity
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: test_result
            extra: '{"warning_markdown":null}'
            type: VARCHAR(7)
        main_dttm_col: last_test_run
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        sql: ""
        table_name: dbt_test_results
      - columns:
          - column_name: published_date
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATE
          - column_name: utc_datetime
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: _loaded_at
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_TZ
          - column_name: market_id
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: forecast_day
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: forecast_zone
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: feed_name
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: model
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: forecast_value
            extra: '{"warning_markdown":null}'
            type: FLOAT
        main_dttm_col: utc_datetime
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        sql: ""
        table_name: stg_morningstar_ercot_sevendayloadforecastmodelandweatherzone
      - columns:
          - column_name: published_date
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATE
          - column_name: utc_datetime
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: _loaded_at
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_TZ
          - column_name: market_id
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: forecast_day
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: forecast_zone
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: feed_name
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: dstflag
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: forecast_value
            extra: '{"warning_markdown":null}'
            type: FLOAT
        main_dttm_col: utc_datetime
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        sql: ""
        table_name: stg_morningstar_ercot_hourlywindpowerproductionbyregionforecast
      - columns:
          - column_name: local_datetime
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: utc_datetime
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: local_date_id
            type: DECIMAL(38, 0)
          - column_name: utc_date_id
            type: DECIMAL(38, 0)
          - column_name: local_time_id
            type: DECIMAL(38, 0)
          - column_name: utc_time_id
            type: DECIMAL(38, 0)
          - column_name: model_name
            type: VARCHAR(16777216)
          - column_name: role_name
            type: VARCHAR(16777216)
          - column_name: user_name
            type: VARCHAR(16777216)
          - column_name: query_id
            type: VARCHAR(16777216)
        main_dttm_col: utc_datetime
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        table_name: model_usage
      - columns:
          - column_name: MONTH_GENERATED_INTERVAL_END
            is_dttm: true
            type: DATETIME
          - column_name: DAY_AHEAD_ENERGY_REVENUE
            type: FLOAT
          - column_name: REAL_TIME_ENERGY_REVENUE
            type: FLOAT
          - column_name: TOTAL_ENERGY_REVENUE
            type: FLOAT
          - column_name: PARK_NAME
            type: STRING
        metrics:
          - expression: count(*)
            metric_name: count
        schema: analytics
        sql:
          "SELECT\r\n   \"MONTH_GENERATED_INTERVAL_END\",\r\n   \"DAY_AHEAD_ENERGY_REVENUE\"\
          , \r\n   \"REAL_TIME_ENERGY_REVENUE\", \r\n   \"TOTAL_ENERGY_REVENUE\",\r\n\
          \   park.park_name\r\nFROM\r\n  \"ANALYTICS\".\"ANALYTICS\".\"REVENUE_MONTHLY\"\
          \r\nleft join \"ANALYTICS\".\"ANALYTICS\".\"PARK\"  using (Park_id)\r\nwhere\
          \ revenue_monthly.month_generated_interval_end >= DATEADD(Day ,-90, current_date)"
        table_name: revenue_monthly
      - columns:
          - column_name: MONTH_GENERATED_INTERVAL_END
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: DATETIME
          - column_name: PARK_NAME
            extra: '{"warning_markdown":null}'
            type: STRING
          - column_name: MONTHLY_NET_GEN
            extra: '{"warning_markdown":null}'
            type: FLOAT
        metrics:
          - expression: count(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
        schema: analytics
        sql:
          "SELECT \n      park.park_name, \n      month_generated_interval_end,\n \
          \     monthly_net_gen\nFROM analytics.net_gen_monthly\n\nleft join \"ANALYTICS\"\
          .\"ANALYTICS\".\"PARK\"  using (Park_id)\n"
        table_name: revenue_monthly_joinedw_park
      - columns:
          - column_name: utc_datetime
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: _loaded_at
            extra: '{"warning_markdown":null}'
            is_dttm: true
            type: TIMESTAMP_TZ
          - column_name: market_id
            extra: '{"warning_markdown":null}'
            type: DECIMAL(38, 0)
          - column_name: feed_name
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: pubcol
            extra: '{"warning_markdown":null}'
            type: VARCHAR(16777216)
          - column_name: pubval
            extra: '{"warning_markdown":null}'
            type: FLOAT
        main_dttm_col: utc_datetime
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics_staging
        sql: ""
        table_name: stg_morningstar_ercot_solarpowerproduction
      - columns:
          - column_name: OpeningWeekendNorthAmerica
            type: DECIMAL(38, 0)
          - column_name: NorthAmerica
            type: DECIMAL(38, 0)
          - column_name: Budget
            type: DECIMAL(38, 0)
          - column_name: OtherTerritories
            type: DECIMAL(38, 0)
          - column_name: Worldwide
            type: DECIMAL(38, 0)
          - column_name: ReleaseDateUS
            type: VARCHAR(16777216)
          - column_name: Distributor
            type: VARCHAR(16777216)
          - column_name: Title
            type: VARCHAR(16777216)
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: dbt_richard_blanchette_staging
        table_name: Testing CSV upload
      - columns:
          - column_name: OpeningWeekendNorthAmerica
            type: DECIMAL(38, 0)
          - column_name: NorthAmerica
            type: DECIMAL(38, 0)
          - column_name: Budget
            type: DECIMAL(38, 0)
          - column_name: OtherTerritories
            type: DECIMAL(38, 0)
          - column_name: Worldwide
            type: DECIMAL(38, 0)
          - column_name: ReleaseDateUS
            type: VARCHAR(16777216)
          - column_name: Distributor
            type: VARCHAR(16777216)
          - column_name: Title
            type: VARCHAR(16777216)
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: dbt_richard_blanchette_staging
        table_name: Marvel Movie Data
      - columns:
          - column_name: DATE_INTERVAL_BEG
            extra: "{}"
            is_dttm: true
            type: DATETIME
          - column_name: WIND_SPEED_AVERAGE
            extra: "{}"
            type: FLOAT
          - column_name: CALENDAR_ID
            extra: "{}"
            type: INT
          - column_name: PARK_NAME
            extra: "{}"
            type: STRING
          - column_name: PARK_ID
            extra: "{}"
            type: INT
        main_dttm_col: DATE_INTERVAL_BEG
        metrics:
          - expression: COUNT(*)
            extra: '{"warning_markdown":""}'
            metric_name: count
            verbose_name: COUNT(*)
        schema: analytics
        sql: "select *

          from analytics.wind_speed_daily"
        table_name: wind_speed_daily
      - columns:
          - column_name: month_interval_beg
            is_dttm: true
            type: TIMESTAMP_NTZ
          - column_name: park_id
            type: DECIMAL(38, 0)
          - column_name: month_id
            type: DECIMAL(38, 0)
          - column_name: park_name
            type: VARCHAR(16777216)
          - column_name: contract_availability
            type: FLOAT
          - column_name: bop_availability
            type: FLOAT
          - column_name: project_availability
            type: FLOAT
        main_dttm_col: month_interval_beg
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: analytics
        table_name: availabilities
    database_name: examples
    extra: '{"metadata_params":{},"engine_params":{},"metadata_cache_timeout":{},"schemas_allowed_for_file_upload":[]}'
    sqlalchemy_uri: postgresql://superset:XXXXXXXXXX@db:5432/superset
    tables:
      - columns:
          - column_name: year
            expression: ""
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: SP_POP_0004_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0004_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0004_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0004_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0014_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0014_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_HIV_0014
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0014_TO_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0014_TO
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0509_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0509_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0509_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_0509_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG00_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_LE00_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG00_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_LE00_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_LE00_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1014_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1014_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1014_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1014_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG01_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG10_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG01_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG10_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_2024_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_2024_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_2024_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_2024_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG02_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG20_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG02_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG20_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_3034_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_3034_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_3034_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_3034_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG03_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG03_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_4044_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_4044_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_4044_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_4044_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_5054_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_5054_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_5054_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_5054_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_6064_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_6064_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_7074_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_7074_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_6064_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_6064_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_7074_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_7074_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG04_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG04_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_80UP_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_80UP_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG05_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG05_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG06_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG06_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG07_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG07_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG08_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG08_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_80UP_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_80UP_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG09_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG09_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1519_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1519_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1519_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1519_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_MTR_1519_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG11_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG11_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_ADT_1524_LT_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_CON_1524_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_ADT_1524_LT_FM_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_ADT_1524_LT_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_HIV_1524_KW_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_HIV_1524_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_CON_1524_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_HIV_1524_KW_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_HIV_1524_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG12_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG21_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG12_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG21_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG13_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG13_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1564_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1564_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1564_TO_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_1564_TO
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG14_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG14_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG15_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_OW15_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG15_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_OW15_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_OW15_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG16_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG16_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG17_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG17_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG18_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG18_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG19_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG19_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_2529_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_2529_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_2529_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_2529_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG22_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG22_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG23_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG23_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG24_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG24_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG25_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_AG25_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_H2O_SAFE_RU_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_H2O_SAFE_UR_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_H2O_SAFE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MLR_SPF2_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_3539_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_3539_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_3539_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_3539_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_IMM_HIB3
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MED_CMHW_P3
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MED_NUMW_P3
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_IMM_POL3
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_4549_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_4549_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_4549_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_4549_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_ANV4_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_5559_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_5559_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_5559_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_5559_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_6569_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_6569_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_7579_MA_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_7579_FE_5Y
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_6569_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_6569_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_TO65_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_65UP_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_TO65_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_65UP_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_65UP_TO_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_65UP_TO
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_7579_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_7579_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_MALN_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_WAST_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_DIAB_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_CON_AIDS_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_ARIC_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_ACSN_RU
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_ACSN_UR
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_ANVC_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_ACSN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_ADT_LITR_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_SMAM_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_AMRT_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_MALN_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_WAST_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_OWGH_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_MALN_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_MALR
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_STNT_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_SVR_WAST_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_WAST_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_BRTC_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_BFED_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_BRTW_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: NY_GNP_PCAP_CD
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_PCAP_PP_KD
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_CON_AIDS_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_ANM_CHLD_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_PCAP
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_SEC_NENR_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_SEC_ENRR_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_PRM_CMPT_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_IYCF_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_ORCF_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_PRG_ARTC_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_HIV_ARTC_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SI_POV_NAHC
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_PNVC_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_VAC_TTNS_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DYN_AIDS_DH
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DYN_AIDS_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DYN_AIDS_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DYN_AIDS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_ADT_LITR_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_SMAM_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_AMRT_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_ADT_LITR_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_ADO_TFRT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DYN_MORT_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_IMRT_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_PRM_NENR_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_PRM_ENRR_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_OWGH_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_HOU_FEMA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_STNT_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_SVR_WAST_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MMR_WAGE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_PRG_ANEM
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_IMM_MEAS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_MMRT_NE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SL_UEM_TOTL_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_FPL_SATI_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_OWGH_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_ANM_NPRG_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_HIV_KNOW_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_ORTH
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_PRV_SMOK_MA
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_MMRT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_STA_STNT_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_SVR_WAST_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SN_ITK_VITA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SN_ITK_SALT_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_TOTL_MA_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_TOTL_MA_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_TBS_DTEC_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_TBS_INCD
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_CBRT_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_TBS_CURE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_IMM_IBCG
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MED_BEDS_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_PUBL_GX_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_PUBL_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_PUBL
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_REG_BRTH_RU_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_REG_BRTH_UR_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_REG_BRTH_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_IMM_HEPB
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_TBS_PREV
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_BRTH_MF
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_URB_GROW
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_TBS_MORT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_URB_TOTL_IN_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_URB_TOTL
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_TOTL_CD
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_CDRT_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SN_ITK_DEFC_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SN_ITK_DEFC
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DTH_COMM_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DTH_NCOM_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_OOPC_TO_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_OOPC_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_CONU_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_SEC_NENR_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_SEC_ENRR_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_SEC_NENR
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_SEC_ENRR
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_PRM_CMPT_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_PRM_CMPT_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SI_POV_RUHC
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SI_POV_URHC
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_XPD_TOTL_GD_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_DPND_YG
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_DPND_OL
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_DPND
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DYN_MORT_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_IMRT_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_REG_DTHS_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MED_PHYS_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_EXTR_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_TFRT_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_WFRT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DTH_INJR_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DTH_IMRT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MMR_DTHS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DTH_NMRT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DTH_MORT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_IMM_IDPT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_PRIV_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_PRIV
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_XPD_TOTL_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DYN_NMRT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_DYN_MORT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_DYN_IMRT_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_TER_ENRR_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_PRM_NENR_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_PRM_ENRR_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_TER_ENRR
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SL_EMP_INSV_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SL_UEM_TOTL_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MMR_LEVE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_ENR_ORPH
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_PRM_NENR
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SE_PRM_ENRR
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SL_TLF_TOTL_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_HIV_KNOW_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_PRV_SMOK_FE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_TOTL_FE_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_TOTL_FE_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MLR_PREG_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MLR_NETS_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MLR_TRET_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SL_UEM_TOTL_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SM_POP_NETM
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SL_TLF_TOTL_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_UWT_TFRT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_PRG_SYPH_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_RUR_TOTL_ZG
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_GROW
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_HIV_ORPH
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_HIV_TOTL
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MMR_RISK_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SH_MMR_RISK
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_POP_TOTL
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_RUR_TOTL_ZS
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SP_RUR_TOTL
            expression: ""
            type: DOUBLE PRECISION
          - column_name: country_name
            expression: ""
            type: VARCHAR(255)
          - column_name: region
            expression: ""
            type: VARCHAR(255)
          - column_name: country_code
            expression: ""
            type: VARCHAR(3)
        description:
          "<!--\nLicensed to the Apache Software Foundation (ASF) under one\n\
          or more contributor license agreements.  See the NOTICE file\ndistributed with\
          \ this work for additional information\nregarding copyright ownership.  The\
          \ ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\
          \"License\"); you may not use this file except in compliance\nwith the License.\
          \  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\
          \nUnless required by applicable law or agreed to in writing,\nsoftware distributed\
          \ under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES\
          \ OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for\
          \ the\nspecific language governing permissions and limitations\nunder the License.\n\
          -->\nThis data was downloaded from the\n[World's Health Organization's website](https://datacatalog.worldbank.org/dataset/health-nutrition-and-population-statistics)\n\
          \nHere's the script that was used to massage the data:\n\n    DIR = \"\"\n \
          \   df_country = pd.read_csv(DIR + '/HNP_Country.csv')\n    df_country.columns\
          \ = ['country_code'] + list(df_country.columns[1:])\n    df_country = df_country[['country_code',\
          \ 'Region']]\n    df_country.columns = ['country_code', 'region']\n\n    df\
          \ = pd.read_csv(DIR + '/HNP_Data.csv')\n    del df['Unnamed: 60']\n    df.columns\
          \ = ['country_name', 'country_code'] + list(df.columns[2:])\n    ndf = df.merge(df_country,\
          \ how='inner')\n\n    dims = ('country_name', 'country_code', 'region')\n  \
          \  vv = [str(i) for i in range(1960, 2015)]\n    mdf = pd.melt(ndf, id_vars=dims\
          \ + ('Indicator Code',), value_vars=vv)\n    mdf['year'] = mdf.variable + '-01-01'\n\
          \    dims = dims + ('year',)\n\n    pdf = mdf.pivot_table(values='value', columns='Indicator\
          \ Code', index=dims)\n    pdf = pdf.reset_index()\n    pdf.to_csv(DIR + '/countries.csv')\n\
          \    pdf.to_json(DIR + '/countries.json', orient='records')\n\nHere's the description\
          \ of the metrics available:\n\nSeries | Code Indicator Name\n--- | ---\nNY.GNP.PCAP.CD\
          \ | GNI per capita, Atlas method (current US$)\nSE.ADT.1524.LT.FM.ZS | Literacy\
          \ rate, youth (ages 15-24), gender parity index (GPI)\nSE.ADT.1524.LT.MA.ZS\
          \ | Literacy rate, youth male (% of males ages 15-24)\nSE.ADT.1524.LT.ZS | Literacy\
          \ rate, youth total (% of people ages 15-24)\nSE.ADT.LITR.FE.ZS | Literacy rate,\
          \ adult female (% of females ages 15 and above)\nSE.ADT.LITR.MA.ZS | Literacy\
          \ rate, adult male (% of males ages 15 and above)\nSE.ADT.LITR.ZS | Literacy\
          \ rate, adult total (% of people ages 15 and above)\nSE.ENR.ORPH | Ratio of\
          \ school attendance of orphans to school attendance of non-orphans ages 10-14\n\
          SE.PRM.CMPT.FE.ZS | Primary completion rate, female (% of relevant age group)\n\
          SE.PRM.CMPT.MA.ZS | Primary completion rate, male (% of relevant age group)\n\
          SE.PRM.CMPT.ZS | Primary completion rate, total (% of relevant age group)\n\
          SE.PRM.ENRR | School enrollment, primary (% gross)\nSE.PRM.ENRR.FE | School\
          \ enrollment, primary, female (% gross)\nSE.PRM.ENRR.MA | School enrollment,\
          \ primary, male (% gross)\nSE.PRM.NENR | School enrollment, primary (% net)\n\
          SE.PRM.NENR.FE | School enrollment, primary, female (% net)\nSE.PRM.NENR.MA\
          \ | School enrollment, primary, male (% net)\nSE.SEC.ENRR | School enrollment,\
          \ secondary (% gross)\nSE.SEC.ENRR.FE | School enrollment, secondary, female\
          \ (% gross)\nSE.SEC.ENRR.MA | School enrollment, secondary, male (% gross)\n\
          SE.SEC.NENR | School enrollment, secondary (% net)\nSE.SEC.NENR.FE | School\
          \ enrollment, secondary, female (% net)\nSE.SEC.NENR.MA | School enrollment,\
          \ secondary, male (% net)\nSE.TER.ENRR | School enrollment, tertiary (% gross)\n\
          SE.TER.ENRR.FE | School enrollment, tertiary, female (% gross)\nSE.XPD.TOTL.GD.ZS\
          \ | Government expenditure on education, total (% of GDP)\nSH.ANM.CHLD.ZS |\
          \ Prevalence of anemia among children (% of children under 5)\nSH.ANM.NPRG.ZS\
          \ | Prevalence of anemia among non-pregnant women (% of women ages 15-49)\n\
          SH.CON.1524.FE.ZS | Condom use, population ages 15-24, female (% of females\
          \ ages 15-24)\nSH.CON.1524.MA.ZS | Condom use, population ages 15-24, male (%\
          \ of males ages 15-24)\nSH.CON.AIDS.FE.ZS | Condom use at last high-risk sex,\
          \ adult female (% ages 15-49)\nSH.CON.AIDS.MA.ZS | Condom use at last high-risk\
          \ sex, adult male (% ages 15-49)\nSH.DTH.COMM.ZS | Cause of death, by communicable\
          \ diseases and maternal, prenatal and nutrition conditions (% of total)\nSH.DTH.IMRT\
          \ | Number of infant deaths\nSH.DTH.INJR.ZS | Cause of death, by injury (% of\
          \ total)\nSH.DTH.MORT | Number of under-five deaths\nSH.DTH.NCOM.ZS | Cause\
          \ of death, by non-communicable diseases (% of total)\nSH.DTH.NMRT | Number\
          \ of neonatal deaths\nSH.DYN.AIDS | Adults (ages 15+) living with HIV\nSH.DYN.AIDS.DH\
          \ | AIDS estimated deaths (UNAIDS estimates)\nSH.DYN.AIDS.FE.ZS | Women's share\
          \ of population ages 15+ living with HIV (%)\nSH.DYN.AIDS.ZS | Prevalence of\
          \ HIV, total (% of population ages 15-49)\nSH.DYN.MORT | Mortality rate, under-5\
          \ (per 1,000 live births)\nSH.DYN.MORT.FE | Mortality rate, under-5, female\
          \ (per 1,000 live births)\nSH.DYN.MORT.MA | Mortality rate, under-5, male (per\
          \ 1,000 live births)\nSH.DYN.NMRT | Mortality rate, neonatal (per 1,000 live\
          \ births)\nSH.FPL.SATI.ZS | Met need for contraception (% of married women ages\
          \ 15-49)\nSH.H2O.SAFE.RU.ZS | Improved water source, rural (% of rural population\
          \ with access)\nSH.H2O.SAFE.UR.ZS | Improved water source, urban (% of urban\
          \ population with access)\nSH.H2O.SAFE.ZS | Improved water source (% of population\
          \ with access)\nSH.HIV.0014 | Children (0-14) living with HIV\nSH.HIV.1524.FE.ZS\
          \ | Prevalence of HIV, female (% ages 15-24)\nSH.HIV.1524.KW.FE.ZS | Comprehensive\
          \ correct knowledge of HIV/AIDS, ages 15-24, female (2 prevent ways and reject\
          \ 3 misconceptions)\nSH.HIV.1524.KW.MA.ZS | Comprehensive correct knowledge\
          \ of HIV/AIDS, ages 15-24, male (2 prevent ways and reject 3 misconceptions)\n\
          SH.HIV.1524.MA.ZS | Prevalence of HIV, male (% ages 15-24)\nSH.HIV.ARTC.ZS |\
          \ Antiretroviral therapy coverage (% of people living with HIV)\nSH.HIV.KNOW.FE.ZS\
          \ | % of females ages 15-49 having comprehensive correct knowledge about HIV\
          \ (2 prevent ways and reject 3 misconceptions)\nSH.HIV.KNOW.MA.ZS | % of males\
          \ ages 15-49 having comprehensive correct knowledge about HIV (2 prevent ways\
          \ and reject 3 misconceptions)\nSH.HIV.ORPH | Children orphaned by HIV/AIDS\n\
          SH.HIV.TOTL | Adults (ages 15+) and children (0-14 years) living with HIV\n\
          SH.IMM.HEPB | Immunization, HepB3 (% of one-year-old children)\nSH.IMM.HIB3\
          \ | Immunization, Hib3 (% of children ages 12-23 months)\nSH.IMM.IBCG | Immunization,\
          \ BCG (% of one-year-old children)\nSH.IMM.IDPT | Immunization, DPT (% of children\
          \ ages 12-23 months)\nSH.IMM.MEAS | Immunization, measles (% of children ages\
          \ 12-23 months)\nSH.IMM.POL3 | Immunization, Pol3 (% of one-year-old children)\n\
          SH.MED.BEDS.ZS | Hospital beds (per 1,000 people)\nSH.MED.CMHW.P3 | Community\
          \ health workers (per 1,000 people)\nSH.MED.NUMW.P3 | Nurses and midwives (per\
          \ 1,000 people)\nSH.MED.PHYS.ZS | Physicians (per 1,000 people)\nSH.MLR.NETS.ZS\
          \ | Use of insecticide-treated bed nets (% of under-5 population)\nSH.MLR.PREG.ZS\
          \ | Use of any antimalarial drug (% of pregnant women)\nSH.MLR.SPF2.ZS | Use\
          \ of Intermittent Preventive Treatment of malaria, 2+ doses of SP/Fansidar (%\
          \ of pregnant women)\nSH.MLR.TRET.ZS | Children with fever receiving antimalarial\
          \ drugs (% of children under age 5 with fever)\nSH.MMR.DTHS | Number of maternal\
          \ deaths\nSH.MMR.LEVE | Number of weeks of maternity leave\nSH.MMR.RISK | Lifetime\
          \ risk of maternal death (1 in: rate varies by country)\nSH.MMR.RISK.ZS | Lifetime\
          \ risk of maternal death (%)\nSH.MMR.WAGE.ZS | Maternal leave benefits (% of\
          \ wages paid in covered period)\nSH.PRG.ANEM | Prevalence of anemia among pregnant\
          \ women (%)\nSH.PRG.ARTC.ZS | Antiretroviral therapy coverage (% of pregnant\
          \ women living with HIV)\nSH.PRG.SYPH.ZS | Prevalence of syphilis (% of women\
          \ attending antenatal care)\nSH.PRV.SMOK.FE | Smoking prevalence, females (%\
          \ of adults)\nSH.PRV.SMOK.MA | Smoking prevalence, males (% of adults)\nSH.STA.ACSN\
          \ | Improved sanitation facilities (% of population with access)\nSH.STA.ACSN.RU\
          \ | Improved sanitation facilities, rural (% of rural population with access)\n\
          SH.STA.ACSN.UR | Improved sanitation facilities, urban (% of urban population\
          \ with access)\nSH.STA.ANV4.ZS | Pregnant women receiving prenatal care of at\
          \ least four visits (% of pregnant women)\nSH.STA.ANVC.ZS | Pregnant women receiving\
          \ prenatal care (%)\nSH.STA.ARIC.ZS | ARI treatment (% of children under 5 taken\
          \ to a health provider)\nSH.STA.BFED.ZS | Exclusive breastfeeding (% of children\
          \ under 6 months)\nSH.STA.BRTC.ZS | Births attended by skilled health staff\
          \ (% of total)\nSH.STA.BRTW.ZS | Low-birthweight babies (% of births)\nSH.STA.DIAB.ZS\
          \ | Diabetes prevalence (% of population ages 20 to 79)\nSH.STA.IYCF.ZS | Infant\
          \ and young child feeding practices, all 3 IYCF (% children ages 6-23 months)\n\
          SH.STA.MALN.FE.ZS | Prevalence of underweight, weight for age, female (% of\
          \ children under 5)\nSH.STA.MALN.MA.ZS | Prevalence of underweight, weight for\
          \ age, male (% of children under 5)\nSH.STA.MALN.ZS | Prevalence of underweight,\
          \ weight for age (% of children under 5)\nSH.STA.MALR | Malaria cases reported\n\
          SH.STA.MMRT | Maternal mortality ratio (modeled estimate, per 100,000 live births)\n\
          SH.STA.MMRT.NE | Maternal mortality ratio (national estimate, per 100,000 live\
          \ births)\nSH.STA.ORCF.ZS | Diarrhea treatment (% of children under 5 receiving\
          \ oral rehydration and continued feeding)\nSH.STA.ORTH | Diarrhea treatment\
          \ (% of children under 5 who received ORS packet)\nSH.STA.OW15.FE.ZS | Prevalence\
          \ of overweight, female (% of female adults)\nSH.STA.OW15.MA.ZS | Prevalence\
          \ of overweight, male (% of male adults)\nSH.STA.OW15.ZS | Prevalence of overweight\
          \ (% of adults)\nSH.STA.OWGH.FE.ZS | Prevalence of overweight, weight for height,\
          \ female (% of children under 5)\nSH.STA.OWGH.MA.ZS | Prevalence of overweight,\
          \ weight for height, male (% of children under 5)\nSH.STA.OWGH.ZS | Prevalence\
          \ of overweight, weight for height (% of children under 5)\nSH.STA.PNVC.ZS |\
          \ Postnatal care coverage (% mothers)\nSH.STA.STNT.FE.ZS | Prevalence of stunting,\
          \ height for age, female (% of children under 5)\nSH.STA.STNT.MA.ZS | Prevalence\
          \ of stunting, height for age, male (% of children under 5)\nSH.STA.STNT.ZS\
          \ | Prevalence of stunting, height for age (% of children under 5)\nSH.STA.WAST.FE.ZS\
          \ | Prevalence of wasting, weight for height, female (% of children under 5)\n\
          SH.STA.WAST.MA.ZS | Prevalence of wasting, weight for height, male (% of children\
          \ under 5)\nSH.STA.WAST.ZS | Prevalence of wasting, weight for height (% of\
          \ children under 5)\nSH.SVR.WAST.FE.ZS | Prevalence of severe wasting, weight\
          \ for height, female (% of children under 5)\nSH.SVR.WAST.MA.ZS | Prevalence\
          \ of severe wasting, weight for height, male (% of children under 5)\nSH.SVR.WAST.ZS\
          \ | Prevalence of severe wasting, weight for height (% of children under 5)\n\
          SH.TBS.CURE.ZS | Tuberculosis treatment success rate (% of new cases)\nSH.TBS.DTEC.ZS\
          \ | Tuberculosis case detection rate (%, all forms)\nSH.TBS.INCD | Incidence\
          \ of tuberculosis (per 100,000 people)\nSH.TBS.MORT | Tuberculosis death rate\
          \ (per 100,000 people)\nSH.TBS.PREV | Prevalence of tuberculosis (per 100,000\
          \ population)\nSH.VAC.TTNS.ZS | Newborns protected against tetanus (%)\nSH.XPD.EXTR.ZS\
          \ | External resources for health (% of total expenditure on health)\nSH.XPD.OOPC.TO.ZS\
          \ | Out-of-pocket health expenditure (% of total expenditure on health)\nSH.XPD.OOPC.ZS\
          \ | Out-of-pocket health expenditure (% of private expenditure on health)\n\
          SH.XPD.PCAP | Health expenditure per capita (current US$)\nSH.XPD.PCAP.PP.KD\
          \ | Health expenditure per capita, PPP (constant 2011 international $)\nSH.XPD.PRIV\
          \ | Health expenditure, private (% of total health expenditure)\nSH.XPD.PRIV.ZS\
          \ | Health expenditure, private (% of GDP)\nSH.XPD.PUBL | Health expenditure,\
          \ public (% of total health expenditure)\nSH.XPD.PUBL.GX.ZS | Health expenditure,\
          \ public (% of government expenditure)\nSH.XPD.PUBL.ZS | Health expenditure,\
          \ public (% of GDP)\nSH.XPD.TOTL.CD | Health expenditure, total (current US$)\n\
          SH.XPD.TOTL.ZS | Health expenditure, total (% of GDP)\nSI.POV.NAHC | Poverty\
          \ headcount ratio at national poverty lines (% of population)\nSI.POV.RUHC |\
          \ Rural poverty headcount ratio at national poverty lines (% of rural population)\n\
          SI.POV.URHC | Urban poverty headcount ratio at national poverty lines (% of\
          \ urban population)\nSL.EMP.INSV.FE.ZS | Share of women in wage employment in\
          \ the nonagricultural sector (% of total nonagricultural employment)\nSL.TLF.TOTL.FE.ZS\
          \ | Labor force, female (% of total labor force)\nSL.TLF.TOTL.IN | Labor force,\
          \ total\nSL.UEM.TOTL.FE.ZS | Unemployment, female (% of female labor force)\
          \ (modeled ILO estimate)\nSL.UEM.TOTL.MA.ZS | Unemployment, male (% of male\
          \ labor force) (modeled ILO estimate)\nSL.UEM.TOTL.ZS | Unemployment, total\
          \ (% of total labor force) (modeled ILO estimate)\nSM.POP.NETM | Net migration\n\
          SN.ITK.DEFC | Number of people who are undernourished\nSN.ITK.DEFC.ZS | Prevalence\
          \ of undernourishment (% of population)\nSN.ITK.SALT.ZS | Consumption of iodized\
          \ salt (% of households)\nSN.ITK.VITA.ZS | Vitamin A supplementation coverage\
          \ rate (% of children ages 6-59 months)\nSP.ADO.TFRT | Adolescent fertility\
          \ rate (births per 1,000 women ages 15-19)\nSP.DYN.AMRT.FE | Mortality rate,\
          \ adult, female (per 1,000 female adults)\nSP.DYN.AMRT.MA | Mortality rate,\
          \ adult, male (per 1,000 male adults)\nSP.DYN.CBRT.IN | Birth rate, crude (per\
          \ 1,000 people)\nSP.DYN.CDRT.IN | Death rate, crude (per 1,000 people)\nSP.DYN.CONU.ZS\
          \ | Contraceptive prevalence (% of women ages 15-49)\nSP.DYN.IMRT.FE.IN | Mortality\
          \ rate, infant, female (per 1,000 live births)\nSP.DYN.IMRT.IN | Mortality rate,\
          \ infant (per 1,000 live births)\nSP.DYN.IMRT.MA.IN | Mortality rate, infant,\
          \ male (per 1,000 live births)\nSP.DYN.LE00.FE.IN | Life expectancy at birth,\
          \ female (years)\nSP.DYN.LE00.IN | Life expectancy at birth, total (years)\n\
          SP.DYN.LE00.MA.IN | Life expectancy at birth, male (years)\nSP.DYN.SMAM.FE |\
          \ Mean age at first marriage, female\nSP.DYN.SMAM.MA | Mean age at first marriage,\
          \ male\nSP.DYN.TFRT.IN | Fertility rate, total (births per woman)\nSP.DYN.TO65.FE.ZS\
          \ | Survival to age 65, female (% of cohort)\nSP.DYN.TO65.MA.ZS | Survival to\
          \ age 65, male (% of cohort)\nSP.DYN.WFRT | Wanted fertility rate (births per\
          \ woman)\nSP.HOU.FEMA.ZS | Female headed households (% of households with a\
          \ female head)\nSP.MTR.1519.ZS | Teenage mothers (% of women ages 15-19 who\
          \ have had children or are currently pregnant)\nSP.POP.0004.FE | Population\
          \ ages 0-4, female\nSP.POP.0004.FE.5Y | Population ages 0-4, female (% of female\
          \ population)\nSP.POP.0004.MA | Population ages 0-4, male\nSP.POP.0004.MA.5Y\
          \ | Population ages 0-4, male (% of male population)\nSP.POP.0014.FE.ZS | Population\
          \ ages 0-14, female (% of total)\nSP.POP.0014.MA.ZS | Population ages 0-14,\
          \ male (% of total)\nSP.POP.0014.TO | Population ages 0-14, total\nSP.POP.0014.TO.ZS\
          \ | Population ages 0-14 (% of total)\nSP.POP.0509.FE | Population ages 5-9,\
          \ female\nSP.POP.0509.FE.5Y | Population ages 5-9, female (% of female population)\n\
          SP.POP.0509.MA | Population ages 5-9, male\nSP.POP.0509.MA.5Y | Population ages\
          \ 5-9, male (% of male population)\nSP.POP.1014.FE | Population ages 10-14,\
          \ female\nSP.POP.1014.FE.5Y | Population ages 10-14, female (% of female population)\n\
          SP.POP.1014.MA | Population ages 10-14, male\nSP.POP.1014.MA.5Y | Population\
          \ ages 10-14, male (% of male population)\nSP.POP.1519.FE | Population ages\
          \ 15-19, female\nSP.POP.1519.FE.5Y | Population ages 15-19, female (% of female\
          \ population)\nSP.POP.1519.MA | Population ages 15-19, male\nSP.POP.1519.MA.5Y\
          \ | Population ages 15-19, male (% of male population)\nSP.POP.1564.FE.ZS |\
          \ Population ages 15-64, female (% of total)\nSP.POP.1564.MA.ZS | Population\
          \ ages 15-64, male (% of total)\nSP.POP.1564.TO | Population ages 15-64, total\n\
          SP.POP.1564.TO.ZS | Population ages 15-64 (% of total)\nSP.POP.2024.FE | Population\
          \ ages 20-24, female\nSP.POP.2024.FE.5Y | Population ages 20-24, female (% of\
          \ female population)\nSP.POP.2024.MA | Population ages 20-24, male\nSP.POP.2024.MA.5Y\
          \ | Population ages 20-24, male (% of male population)\nSP.POP.2529.FE | Population\
          \ ages 25-29, female\nSP.POP.2529.FE.5Y | Population ages 25-29, female (% of\
          \ female population)\nSP.POP.2529.MA | Population ages 25-29, male\nSP.POP.2529.MA.5Y\
          \ | Population ages 25-29, male (% of male population)\nSP.POP.3034.FE | Population\
          \ ages 30-34, female\nSP.POP.3034.FE.5Y | Population ages 30-34, female (% of\
          \ female population)\nSP.POP.3034.MA | Population ages 30-34, male\nSP.POP.3034.MA.5Y\
          \ | Population ages 30-34, male (% of male population)\nSP.POP.3539.FE | Population\
          \ ages 35-39, female\nSP.POP.3539.FE.5Y | Population ages 35-39, female (% of\
          \ female population)\nSP.POP.3539.MA | Population ages 35-39, male\nSP.POP.3539.MA.5Y\
          \ | Population ages 35-39, male (% of male population)\nSP.POP.4044.FE | Population\
          \ ages 40-44, female\nSP.POP.4044.FE.5Y | Population ages 40-44, female (% of\
          \ female population)\nSP.POP.4044.MA | Population ages 40-44, male\nSP.POP.4044.MA.5Y\
          \ | Population ages 40-44, male (% of male population)\nSP.POP.4549.FE | Population\
          \ ages 45-49, female\nSP.POP.4549.FE.5Y | Population ages 45-49, female (% of\
          \ female population)\nSP.POP.4549.MA | Population ages 45-49, male\nSP.POP.4549.MA.5Y\
          \ | Population ages 45-49, male (% of male population)\nSP.POP.5054.FE | Population\
          \ ages 50-54, female\nSP.POP.5054.FE.5Y | Population ages 50-54, female (% of\
          \ female population)\nSP.POP.5054.MA | Population ages 50-54, male\nSP.POP.5054.MA.5Y\
          \ | Population ages 50-54, male (% of male population)\nSP.POP.5559.FE | Population\
          \ ages 55-59, female\nSP.POP.5559.FE.5Y | Population ages 55-59, female (% of\
          \ female population)\nSP.POP.5559.MA | Population ages 55-59, male\nSP.POP.5559.MA.5Y\
          \ | Population ages 55-59, male (% of male population)\nSP.POP.6064.FE | Population\
          \ ages 60-64, female\nSP.POP.6064.FE.5Y | Population ages 60-64, female (% of\
          \ female population)\nSP.POP.6064.MA | Population ages 60-64, male\nSP.POP.6064.MA.5Y\
          \ | Population ages 60-64, male (% of male population)\nSP.POP.6569.FE | Population\
          \ ages 65-69, female\nSP.POP.6569.FE.5Y | Population ages 65-69, female (% of\
          \ female population)\nSP.POP.6569.MA | Population ages 65-69, male\nSP.POP.6569.MA.5Y\
          \ | Population ages 65-69, male (% of male population)\nSP.POP.65UP.FE.ZS |\
          \ Population ages 65 and above, female (% of total)\nSP.POP.65UP.MA.ZS | Population\
          \ ages 65 and above, male (% of total)\nSP.POP.65UP.TO | Population ages 65\
          \ and above, total\nSP.POP.65UP.TO.ZS | Population ages 65 and above (% of total)\n\
          SP.POP.7074.FE | Population ages 70-74, female\nSP.POP.7074.FE.5Y | Population\
          \ ages 70-74, female (% of female population)\nSP.POP.7074.MA | Population ages\
          \ 70-74, male\nSP.POP.7074.MA.5Y | Population ages 70-74, male (% of male population)\n\
          SP.POP.7579.FE | Population ages 75-79, female\nSP.POP.7579.FE.5Y | Population\
          \ ages 75-79, female (% of female population)\nSP.POP.7579.MA | Population ages\
          \ 75-79, male\nSP.POP.7579.MA.5Y | Population ages 75-79, male (% of male population)\n\
          SP.POP.80UP.FE | Population ages 80 and above, female\nSP.POP.80UP.FE.5Y | Population\
          \ ages 80 and above, female (% of female population)\nSP.POP.80UP.MA | Population\
          \ ages 80 and above, male\nSP.POP.80UP.MA.5Y | Population ages 80 and above,\
          \ male (% of male population)\nSP.POP.AG00.FE.IN | Age population, age 0, female,\
          \ interpolated\nSP.POP.AG00.MA.IN | Age population, age 0, male, interpolated\n\
          SP.POP.AG01.FE.IN | Age population, age 01, female, interpolated\nSP.POP.AG01.MA.IN\
          \ | Age population, age 01, male, interpolated\nSP.POP.AG02.FE.IN | Age population,\
          \ age 02, female, interpolated\nSP.POP.AG02.MA.IN | Age population, age 02,\
          \ male, interpolated\nSP.POP.AG03.FE.IN | Age population, age 03, female, interpolated\n\
          SP.POP.AG03.MA.IN | Age population, age 03, male, interpolated\nSP.POP.AG04.FE.IN\
          \ | Age population, age 04, female, interpolated\nSP.POP.AG04.MA.IN | Age population,\
          \ age 04, male, interpolated\nSP.POP.AG05.FE.IN | Age population, age 05, female,\
          \ interpolated\nSP.POP.AG05.MA.IN | Age population, age 05, male, interpolated\n\
          SP.POP.AG06.FE.IN | Age population, age 06, female, interpolated\nSP.POP.AG06.MA.IN\
          \ | Age population, age 06, male, interpolated\nSP.POP.AG07.FE.IN | Age population,\
          \ age 07, female, interpolated\nSP.POP.AG07.MA.IN | Age population, age 07,\
          \ male, interpolated\nSP.POP.AG08.FE.IN | Age population, age 08, female, interpolated\n\
          SP.POP.AG08.MA.IN | Age population, age 08, male, interpolated\nSP.POP.AG09.FE.IN\
          \ | Age population, age 09, female, interpolated\nSP.POP.AG09.MA.IN | Age population,\
          \ age 09, male, interpolated\nSP.POP.AG10.FE.IN | Age population, age 10, female,\
          \ interpolated\nSP.POP.AG10.MA.IN | Age population, age 10, male\nSP.POP.AG11.FE.IN\
          \ | Age population, age 11, female, interpolated\nSP.POP.AG11.MA.IN | Age population,\
          \ age 11, male\nSP.POP.AG12.FE.IN | Age population, age 12, female, interpolated\n\
          SP.POP.AG12.MA.IN | Age population, age 12, male\nSP.POP.AG13.FE.IN | Age population,\
          \ age 13, female, interpolated\nSP.POP.AG13.MA.IN | Age population, age 13,\
          \ male\nSP.POP.AG14.FE.IN | Age population, age 14, female, interpolated\nSP.POP.AG14.MA.IN\
          \ | Age population, age 14, male\nSP.POP.AG15.FE.IN | Age population, age 15,\
          \ female, interpolated\nSP.POP.AG15.MA.IN | Age population, age 15, male, interpolated\n\
          SP.POP.AG16.FE.IN | Age population, age 16, female, interpolated\nSP.POP.AG16.MA.IN\
          \ | Age population, age 16, male, interpolated\nSP.POP.AG17.FE.IN | Age population,\
          \ age 17, female, interpolated\nSP.POP.AG17.MA.IN | Age population, age 17,\
          \ male, interpolated\nSP.POP.AG18.FE.IN | Age population, age 18, female, interpolated\n\
          SP.POP.AG18.MA.IN | Age population, age 18, male, interpolated\nSP.POP.AG19.FE.IN\
          \ | Age population, age 19, female, interpolated\nSP.POP.AG19.MA.IN | Age population,\
          \ age 19, male, interpolated\nSP.POP.AG20.FE.IN | Age population, age 20, female,\
          \ interpolated\nSP.POP.AG20.MA.IN | Age population, age 20, male, interpolated\n\
          SP.POP.AG21.FE.IN | Age population, age 21, female, interpolated\nSP.POP.AG21.MA.IN\
          \ | Age population, age 21, male, interpolated\nSP.POP.AG22.FE.IN | Age population,\
          \ age 22, female, interpolated\nSP.POP.AG22.MA.IN | Age population, age 22,\
          \ male, interpolated\nSP.POP.AG23.FE.IN | Age population, age 23, female, interpolated\n\
          SP.POP.AG23.MA.IN | Age population, age 23, male, interpolated\nSP.POP.AG24.FE.IN\
          \ | Age population, age 24, female, interpolated\nSP.POP.AG24.MA.IN | Age population,\
          \ age 24, male, interpolated\nSP.POP.AG25.FE.IN | Age population, age 25, female,\
          \ interpolated\nSP.POP.AG25.MA.IN | Age population, age 25, male, interpolated\n\
          SP.POP.BRTH.MF | Sex ratio at birth (male births per female births)\nSP.POP.DPND\
          \ | Age dependency ratio (% of working-age population)\nSP.POP.DPND.OL | Age\
          \ dependency ratio, old (% of working-age population)\nSP.POP.DPND.YG | Age\
          \ dependency ratio, young (% of working-age population)\nSP.POP.GROW | Population\
          \ growth (annual %)\nSP.POP.TOTL | Population, total\nSP.POP.TOTL.FE.IN | Population,\
          \ female\nSP.POP.TOTL.FE.ZS | Population, female (% of total)\nSP.POP.TOTL.MA.IN\
          \ | Population, male\nSP.POP.TOTL.MA.ZS | Population, male (% of total)\nSP.REG.BRTH.RU.ZS\
          \ | Completeness of birth registration, rural (%)\nSP.REG.BRTH.UR.ZS | Completeness\
          \ of birth registration, urban (%)\nSP.REG.BRTH.ZS | Completeness of birth registration\
          \ (%)\nSP.REG.DTHS.ZS | Completeness of death registration with cause-of-death\
          \ information (%)\nSP.RUR.TOTL | Rural population\nSP.RUR.TOTL.ZG | Rural population\
          \ growth (annual %)\nSP.RUR.TOTL.ZS | Rural population (% of total population)\n\
          SP.URB.GROW | Urban population growth (annual %)\nSP.URB.TOTL | Urban population\n\
          SP.URB.TOTL.IN.ZS | Urban population (% of total)\nSP.UWT.TFRT | Unmet need\
          \ for contraception (% of married women ages 15-49)\n"
        filter_select_enabled: true
        main_dttm_col: year
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
          - expression: sum("SP_DYN_LE00_IN")
            metric_name: sum__SP_DYN_LE00_IN
          - expression: sum("SH_DYN_AIDS")
            metric_name: sum__SH_DYN_AIDS
          - expression: sum("SP_POP_TOTL")
            metric_name: sum__SP_POP_TOTL
          - expression: sum("SP_RUR_TOTL_ZS")
            metric_name: sum__SP_RUR_TOTL_ZS
          - expression: sum("SP_RUR_TOTL")
            metric_name: sum__SP_RUR_TOTL
        schema: public
        table_name: wb_health_population
      - columns:
          - column_name: highest_degree_earned
            description: Highest Degree Earned
            expression:
              "CASE \n  WHEN school_degree = 'no high school (secondary school)'\
              \ THEN 'A. No high school (secondary school)'\n  WHEN school_degree =  'some\
              \ high school' THEN 'B. Some high school'\n  WHEN school_degree = 'high school\
              \ diploma or equivalent (GED)' THEN 'C. High school diploma or equivalent\
              \ (GED)'\n  WHEN school_degree = 'associate''s degree' THEN 'D. Associate''s\
              \ degree'\n  WHEN school_degree = 'some college credit, no degree' THEN 'E.\
              \ Some college credit, no degree'\n  WHEN school_degree = 'bachelor''s degree'\
              \ THEN 'F. Bachelor''s degree'\n  WHEN school_degree = 'trade, technical,\
              \ or vocational training' THEN 'G. Trade, technical, or vocational training'\n\
              \  WHEN school_degree = 'master''s degree (non-professional)' THEN 'H. Master''s\
              \ degree (non-professional)'\n  WHEN school_degree = 'Ph.D.' THEN 'I. Ph.D.'\n\
              \  WHEN school_degree = 'professional degree (MBA, MD, JD, etc.)' THEN 'J.\
              \ Professional degree (MBA, MD, JD, etc.)'\nEND"
            type: STRING
            verbose_name: Highest Degree Earned
          - column_name: job_location_preference
            expression:
              "case \nwhen job_lctn_pref is Null then 'No Answer' \nwhen job_lctn_pref\
              \ = 'from home' then 'From Home'\nwhen job_lctn_pref = 'no preference' then\
              \ 'No Preference'\nwhen job_lctn_pref = 'in an office with other developers'\
              \ then 'In an Office (with Other Developers)'\nelse job_lctn_pref\nend "
            verbose_name: Job Location Preference
          - column_name: ethnic_minority
            expression:
              "CASE \nWHEN is_ethnic_minority = 0 THEN 'No, not an ethnic minority'\
              \ \nWHEN is_ethnic_minority = 1 THEN 'Yes, an ethnic minority' \nELSE 'No\
              \ Answer'\nEND"
            type: STRING
            verbose_name: Ethnic Minority
          - column_name: willing_to_relocate
            expression:
              "CASE \nWHEN job_relocate = 0 THEN 'No: Not Willing to' \nWHEN job_relocate\
              \ = 1 THEN 'Yes: Willing To'\nELSE 'No Answer'\nEND"
            type: STRING
            verbose_name: Willing To Relocate
          - column_name: developer_type
            expression:
              CASE WHEN is_software_dev = 0 THEN 'Aspiring Developer' WHEN is_software_dev
              = 1 THEN 'Currently A Developer' END
            type: STRING
            verbose_name: Developer Type
          - column_name: first_time_developer
            expression:
              "CASE \nWHEN is_first_dev_job = 0 THEN 'No' \nWHEN is_first_dev_job\
              \ = 1 THEN 'Yes' \nELSE 'No Answer'\nEND"
            verbose_name: First Time Developer
          - column_name: calc_first_time_dev
            expression:
              CASE WHEN is_first_dev_job = 0 THEN 'No' WHEN is_first_dev_job =
              1 THEN 'Yes' END
            type: STRING
          - column_name: time_start
            is_dttm: true
            type: DATETIME
          - column_name: yt_codingtuts360
            type: DOUBLE PRECISION
          - column_name: is_recv_disab_bnft
            type: DOUBLE PRECISION
          - column_name: job_intr_qa_engn
            type: DOUBLE PRECISION
          - column_name: has_high_spd_ntnet
            type: DOUBLE PRECISION
          - column_name: is_first_dev_job
            type: DOUBLE PRECISION
          - column_name: job_intr_ux_engn
            type: DOUBLE PRECISION
          - column_name: bootcamp_have_loan
            type: DOUBLE PRECISION
          - column_name: podcast_js_jabber
            type: DOUBLE PRECISION
          - column_name: job_intr_datasci
            type: DOUBLE PRECISION
          - column_name: job_intr_dataengn
            type: DOUBLE PRECISION
          - column_name: rsrc_khan_acdm
            type: DOUBLE PRECISION
          - column_name: has_finance_depends
            type: DOUBLE PRECISION
          - column_name: has_served_military
            type: DOUBLE PRECISION
          - column_name: job_intr_backend
            type: DOUBLE PRECISION
          - column_name: job_intr_teacher
            type: DOUBLE PRECISION
          - column_name: months_job_search
            type: DOUBLE PRECISION
          - column_name: student_debt_has
            type: DOUBLE PRECISION
          - column_name: student_debt_amt
            type: DOUBLE PRECISION
          - column_name: job_intr_gamedev
            type: DOUBLE PRECISION
          - column_name: rsrc_code_wars
            type: DOUBLE PRECISION
          - column_name: do_finance_support
            type: DOUBLE PRECISION
          - column_name: last_yr_income
            type: DOUBLE PRECISION
          - column_name: is_software_dev
            type: DOUBLE PRECISION
          - column_name: money_for_learning
            type: DOUBLE PRECISION
          - column_name: home_mrtg_has
            type: DOUBLE PRECISION
          - column_name: job_intr_mobile
            type: DOUBLE PRECISION
          - column_name: job_intr_infosec
            type: DOUBLE PRECISION
          - column_name: job_intr_fllstck
            type: DOUBLE PRECISION
          - column_name: job_intr_frntend
            type: DOUBLE PRECISION
          - column_name: job_intr_devops
            type: DOUBLE PRECISION
          - column_name: job_intr_projm
            type: DOUBLE PRECISION
          - column_name: rsrc_css_tricks
            type: DOUBLE PRECISION
          - column_name: yt_cs_dojo
            type: DOUBLE PRECISION
          - column_name: is_ethnic_minority
            type: DOUBLE PRECISION
          - column_name: yt_mit_ocw
            type: DOUBLE PRECISION
          - column_name: is_self_employed
            type: DOUBLE PRECISION
          - column_name: home_mrtg_owe
            type: DOUBLE PRECISION
          - column_name: yt_engn_truth
            type: DOUBLE PRECISION
          - column_name: bootcamp_attend
            type: DOUBLE PRECISION
          - column_name: yt_derekbanas
            type: DOUBLE PRECISION
          - column_name: yt_learncodeacdm
            type: DOUBLE PRECISION
          - column_name: podcast_changelog
            type: DOUBLE PRECISION
          - column_name: rsrc_hackerrank
            type: DOUBLE PRECISION
          - column_name: podcast_devtea
            type: DOUBLE PRECISION
          - column_name: podcast_sedaily
            type: DOUBLE PRECISION
          - column_name: podcast_seradio
            type: DOUBLE PRECISION
          - column_name: codeevnt_gamejam
            type: DOUBLE PRECISION
          - column_name: podcast_geekspeak
            type: DOUBLE PRECISION
          - column_name: podcast_talkpythonme
            type: DOUBLE PRECISION
          - column_name: podcast_hanselmnts
            type: DOUBLE PRECISION
          - column_name: podcast_syntaxfm
            type: DOUBLE PRECISION
          - column_name: podcast_shoptalk
            type: DOUBLE PRECISION
          - column_name: yt_mozillahacks
            type: DOUBLE PRECISION
          - column_name: podcast_codingblcks
            type: DOUBLE PRECISION
          - column_name: podcast_codenewbie
            type: DOUBLE PRECISION
          - column_name: bootcamp_recommend
            type: DOUBLE PRECISION
          - column_name: codeevnt_railsbrdg
            type: DOUBLE PRECISION
          - column_name: bootcamp_finished
            type: DOUBLE PRECISION
          - column_name: podcast_rubyrogues
            type: DOUBLE PRECISION
          - column_name: job_relocate
            type: DOUBLE PRECISION
          - column_name: debt_amt
            type: DOUBLE PRECISION
          - column_name: rsrc_codeacdm
            type: DOUBLE PRECISION
          - column_name: podcast_fcc
            type: DOUBLE PRECISION
          - column_name: podcast_codepenrd
            type: DOUBLE PRECISION
          - column_name: podcast_fullstckrd
            type: DOUBLE PRECISION
          - column_name: codeevnt_hackthn
            type: DOUBLE PRECISION
          - column_name: rsrc_udacity
            type: DOUBLE PRECISION
          - column_name: podcast_ltcwm
            type: DOUBLE PRECISION
          - column_name: rsrc_coursera
            type: DOUBLE PRECISION
          - column_name: codeevnt_djangogrls
            type: DOUBLE PRECISION
          - column_name: codeevnt_startupwknd
            type: DOUBLE PRECISION
          - column_name: podcast_progthrwdwn
            type: DOUBLE PRECISION
          - column_name: expected_earn
            type: DOUBLE PRECISION
          - column_name: rsrc_egghead
            type: DOUBLE PRECISION
          - column_name: codeevnt_railsgrls
            type: DOUBLE PRECISION
          - column_name: has_children
            type: DOUBLE PRECISION
          - column_name: podcast_frnthppyhr
            type: DOUBLE PRECISION
          - column_name: yt_codingtrain
            type: DOUBLE PRECISION
          - column_name: rsrc_lynda
            type: DOUBLE PRECISION
          - column_name: rsrc_pluralsght
            type: DOUBLE PRECISION
          - column_name: hours_learning
            type: DOUBLE PRECISION
          - column_name: yt_simplilearn
            type: DOUBLE PRECISION
          - column_name: codeevnt_wkndbtcmp
            type: DOUBLE PRECISION
          - column_name: codeevnt_fcc
            type: DOUBLE PRECISION
          - column_name: rsrc_fcc
            type: DOUBLE PRECISION
          - column_name: codeevnt_coderdojo
            type: DOUBLE PRECISION
          - column_name: codeevnt_nodeschl
            type: DOUBLE PRECISION
          - column_name: codeevnt_womenwc
            type: DOUBLE PRECISION
          - column_name: codeevnt_confs
            type: DOUBLE PRECISION
          - column_name: yt_fcc
            type: DOUBLE PRECISION
          - column_name: codeevnt_girldevit
            type: DOUBLE PRECISION
          - column_name: codeevnt_meetup
            type: DOUBLE PRECISION
          - column_name: codeevnt_workshps
            type: DOUBLE PRECISION
          - column_name: rsrc_frntendmstr
            type: DOUBLE PRECISION
          - column_name: num_children
            type: DOUBLE PRECISION
          - column_name: rsrc_udemy
            type: DOUBLE PRECISION
          - column_name: rsrc_edx
            type: DOUBLE PRECISION
          - column_name: rsrc_mdn
            type: DOUBLE PRECISION
          - column_name: rsrc_treehouse
            type: DOUBLE PRECISION
          - column_name: yt_computerphile
            type: DOUBLE PRECISION
          - column_name: yt_funfunfunct
            type: DOUBLE PRECISION
          - column_name: rsrc_so
            type: DOUBLE PRECISION
          - column_name: yt_googledevs
            type: DOUBLE PRECISION
          - column_name: yt_devtips
            type: DOUBLE PRECISION
          - column_name: yt_simpleprog
            type: DOUBLE PRECISION
          - column_name: yt_lvluptuts
            type: DOUBLE PRECISION
          - column_name: time_total_sec
            type: BIGINT
          - column_name: months_programming
            type: BIGINT
          - column_name: age
            type: BIGINT
          - column_name: ID
            type: TEXT
          - column_name: reasons_to_code_other
            type: TEXT
          - column_name: lang_at_home
            type: TEXT
          - column_name: when_appl_job
            type: TEXT
          - column_name: reasons_to_code
            type: TEXT
          - column_name: live_city_population
            type: TEXT
          - column_name: job_lctn_pref
            type: TEXT
          - column_name: job_intr_other
            type: TEXT
          - column_name: curr_emplymnt_other
            type: TEXT
          - column_name: marital_status
            type: TEXT
          - column_name: bootcamp_name
            type: TEXT
          - column_name: podcast_other
            type: TEXT
          - column_name: school_major
            type: TEXT
          - column_name: job_pref
            type: TEXT
          - column_name: country_citizen
            type: TEXT
          - column_name: school_degree
            type: TEXT
          - column_name: codeevnt_other
            type: TEXT
          - column_name: curr_field
            type: TEXT
          - column_name: communite_time
            type: TEXT
          - column_name: rsrc_other
            type: TEXT
          - column_name: country_live
            type: TEXT
          - column_name: curr_emplymnt
            type: TEXT
          - column_name: gender_other
            type: TEXT
          - column_name: time_end
            type: TEXT
          - column_name: network_id
            type: TEXT
          - column_name: yt_other
            type: TEXT
          - column_name: gender
            type: TEXT
        filter_select_enabled: true
        metrics:
          - expression: COUNT(*)
            metric_name: count
            verbose_name: COUNT(*)
        schema: public
        sql: ""
        table_name: FCC 2018 Survey
      - columns:
          - column_name: ds
            expression: ""
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: LATE_AIRCRAFT_DELAY
            expression: ""
            type: DOUBLE PRECISION
          - column_name: ARRIVAL_DELAY
            expression: ""
            type: DOUBLE PRECISION
          - column_name: DEPARTURE_DELAY
            expression: ""
            type: DOUBLE PRECISION
          - column_name: WEATHER_DELAY
            expression: ""
            type: DOUBLE PRECISION
          - column_name: AIRLINE_DELAY
            expression: ""
            type: DOUBLE PRECISION
          - column_name: AIR_SYSTEM_DELAY
            expression: ""
            type: DOUBLE PRECISION
          - column_name: ARRIVAL_TIME
            expression: ""
            type: DOUBLE PRECISION
          - column_name: SECURITY_DELAY
            expression: ""
            type: DOUBLE PRECISION
          - column_name: LATITUDE_DEST
            expression: ""
            type: DOUBLE PRECISION
          - column_name: ELAPSED_TIME
            expression: ""
            type: DOUBLE PRECISION
          - column_name: DEPARTURE_TIME
            expression: ""
            type: DOUBLE PRECISION
          - column_name: LATITUDE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: AIR_TIME
            expression: ""
            type: DOUBLE PRECISION
          - column_name: TAXI_IN
            expression: ""
            type: DOUBLE PRECISION
          - column_name: TAXI_OUT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: LONGITUDE_DEST
            expression: ""
            type: DOUBLE PRECISION
          - column_name: LONGITUDE
            expression: ""
            type: DOUBLE PRECISION
          - column_name: WHEELS_OFF
            expression: ""
            type: DOUBLE PRECISION
          - column_name: WHEELS_ON
            expression: ""
            type: DOUBLE PRECISION
          - column_name: CANCELLATION_REASON
            expression: ""
            type: TEXT
          - column_name: SCHEDULED_ARRIVAL
            expression: ""
            type: BIGINT
          - column_name: DESTINATION_AIRPORT
            expression: ""
            type: TEXT
          - column_name: CANCELLED
            expression: ""
            type: BIGINT
          - column_name: SCHEDULED_DEPARTURE
            expression: ""
            type: BIGINT
          - column_name: DISTANCE
            expression: ""
            type: BIGINT
          - column_name: DAY_OF_WEEK
            expression: ""
            type: BIGINT
          - column_name: DAY
            expression: ""
            type: BIGINT
          - column_name: TAIL_NUMBER
            expression: ""
            type: TEXT
          - column_name: YEAR
            expression: ""
            type: BIGINT
          - column_name: STATE_DEST
            expression: ""
            type: TEXT
          - column_name: AIRPORT_DEST
            expression: ""
            type: TEXT
          - column_name: AIRLINE
            expression: ""
            type: TEXT
          - column_name: STATE
            expression: ""
            type: TEXT
          - column_name: ORIGIN_AIRPORT
            expression: ""
            type: TEXT
          - column_name: AIRPORT
            expression: ""
            type: TEXT
          - column_name: FLIGHT_NUMBER
            expression: ""
            type: BIGINT
          - column_name: SCHEDULED_TIME
            expression: ""
            type: BIGINT
          - column_name: DIVERTED
            expression: ""
            type: BIGINT
          - column_name: MONTH
            expression: ""
            type: BIGINT
          - column_name: CITY_DEST
            expression: ""
            type: TEXT
          - column_name: COUNTRY_DEST
            expression: ""
            type: TEXT
          - column_name: CITY
            expression: ""
            type: TEXT
          - column_name: COUNTRY
            expression: ""
            type: TEXT
        description: Random set of flights in the US
        filter_select_enabled: true
        main_dttm_col: ds
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: flights
      - columns:
          - column_name: bot_profile__updated
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: last_read
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: ts
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: bot_profile__team_id
            type: VARCHAR
          - column_name: bot_profile__app_id
            type: VARCHAR
          - column_name: bot_profile__name
            type: VARCHAR
          - column_name: bot_profile__id
            type: VARCHAR
          - column_name: parent_user_id
            type: VARCHAR
          - column_name: client_msg_id
            type: VARCHAR
          - column_name: icons__emoji
            type: VARCHAR
          - column_name: channel_id
            type: VARCHAR
          - column_name: source_team
            type: VARCHAR
          - column_name: thread_ts
            type: VARCHAR
          - column_name: old_name
            type: VARCHAR
          - column_name: latest_reply
            type: VARCHAR
          - column_name: user_team
            type: VARCHAR
          - column_name: bot_id
            type: VARCHAR
          - column_name: file_id
            type: VARCHAR
          - column_name: username
            type: VARCHAR
          - column_name: permalink
            type: VARCHAR
          - column_name: name
            type: VARCHAR
          - column_name: team
            type: VARCHAR
          - column_name: subtype
            type: VARCHAR
          - column_name: topic
            type: VARCHAR
          - column_name: inviter
            type: VARCHAR
          - column_name: purpose
            type: VARCHAR
          - column_name: type
            type: VARCHAR
          - column_name: user
            type: VARCHAR
          - column_name: bot_profile__deleted
            type: BOOLEAN
          - column_name: display_as_bot
            type: BOOLEAN
          - column_name: is_delayed_message
            type: BOOLEAN
          - column_name: is_starred
            type: BOOLEAN
          - column_name: is_intro
            type: BOOLEAN
          - column_name: upload
            type: BOOLEAN
          - column_name: subscribed
            type: BOOLEAN
          - column_name: reply_users_count
            type: BIGINT
          - column_name: unread_count
            type: BIGINT
          - column_name: reply_count
            type: BIGINT
          - column_name: file_ids
            type: TEXT
          - column_name: pinned_to
            type: TEXT
          - column_name: reply_users
            type: TEXT
          - column_name: reactions
            type: TEXT
          - column_name: blocks
            type: TEXT
          - column_name: text
            type: TEXT
        filter_select_enabled: true
        main_dttm_col: bot_profile__updated
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: messages
      - columns:
          - column_name: topic__last_set
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: purpose__last_set
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: created
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: unlinked
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: topic__creator
            type: VARCHAR
          - column_name: purpose__creator
            type: VARCHAR
          - column_name: purpose__value
            type: VARCHAR
          - column_name: parent_conversation
            type: VARCHAR
          - column_name: name_normalized
            type: VARCHAR
          - column_name: channel_id
            type: VARCHAR
          - column_name: creator
            type: VARCHAR
          - column_name: name
            type: VARCHAR
          - column_name: id
            type: VARCHAR
          - column_name: is_pending_ext_shared
            type: BOOLEAN
          - column_name: is_ext_shared
            type: BOOLEAN
          - column_name: is_org_shared
            type: BOOLEAN
          - column_name: is_archived
            type: BOOLEAN
          - column_name: is_channel
            type: BOOLEAN
          - column_name: is_shared
            type: BOOLEAN
          - column_name: is_general
            type: BOOLEAN
          - column_name: is_private
            type: BOOLEAN
          - column_name: is_member
            type: BOOLEAN
          - column_name: is_group
            type: BOOLEAN
          - column_name: is_mpim
            type: BOOLEAN
          - column_name: is_im
            type: BOOLEAN
          - column_name: num_members
            type: BIGINT
          - column_name: pending_connected_team_ids
            type: TEXT
          - column_name: shared_team_ids
            type: TEXT
          - column_name: topic__value
            type: TEXT
          - column_name: pending_shared
            type: TEXT
          - column_name: previous_names
            type: TEXT
          - column_name: members
            type: TEXT
        filter_select_enabled: true
        main_dttm_col: created
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: channels
      - columns:
          - column_name: clinical_stage
            expression:
              "CASE \nWHEN stage_of_development = 'Pre-clinical' THEN '0. Pre-clinical'\n\
              WHEN stage_of_development = 'Phase I' THEN '1. Phase I' \nWHEN stage_of_development\
              \ = 'Phase I/II' or stage_of_development = 'Phase II' THEN '2. Phase II or\
              \ Combined I/II'\nWHEN stage_of_development = 'Phase III' THEN '3. Phase III'\n\
              WHEN stage_of_development = 'Authorized' THEN '4. Authorized'\nEND"
            type: STRING
          - column_name: fda_approved_indications
            type: DOUBLE PRECISION
          - column_name: clinical_trials_for_other_diseases_or_related_use
            type: TEXT
          - column_name: date_last_updated
            type: TEXT
          - column_name: treatment_vs_vaccine
            type: TEXT
          - column_name: anticipated_next_steps
            type: TEXT
          - column_name: developer_or_researcher
            type: TEXT
          - column_name: stage_of_development
            type: TEXT
          - column_name: ioc_country_code
            type: TEXT
          - column_name: clinical_trials
            type: TEXT
          - column_name: product_category
            type: TEXT
          - column_name: country_name
            type: TEXT
          - column_name: published_results
            type: TEXT
          - column_name: product_description
            type: TEXT
          - column_name: sources
            type: TEXT
          - column_name: funder
            type: TEXT
        filter_select_enabled: true
        metrics:
          - expression: COUNT(*)
            metric_name: count
            verbose_name: COUNT(*)
        schema: public
        sql: ""
        table_name: covid_vaccines
      - columns:
          - column_name: new_members
            expression: total_membership - LAG(total_membership) OVER (ORDER BY date)
            type: BIGINT
            verbose_name: New Members
          - column_name: date
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: percent_of_messages_private_channels
            type: DOUBLE PRECISION
          - column_name: percent_of_messages_public_channels
            type: DOUBLE PRECISION
          - column_name: percent_of_views_private_channels
            type: DOUBLE PRECISION
          - column_name: percent_of_views_public_channels
            type: DOUBLE PRECISION
          - column_name: percent_of_messages_dms
            type: DOUBLE PRECISION
          - column_name: percent_of_views_dms
            type: DOUBLE PRECISION
          - column_name: messages_in_shared_channels
            type: BIGINT
          - column_name: messages_in_private_channels
            type: BIGINT
          - column_name: public_channels_single_workspace
            type: BIGINT
          - column_name: messages_in_public_channels
            type: BIGINT
          - column_name: daily_members_posting_messages
            type: BIGINT
          - column_name: weekly_members_posting_messages
            type: BIGINT
          - column_name: daily_active_members
            type: BIGINT
          - column_name: weekly_active_members
            type: BIGINT
          - column_name: messages_in_dms
            type: BIGINT
          - column_name: total_membership
            type: BIGINT
          - column_name: messages_posted
            type: BIGINT
          - column_name: full_members
            type: BIGINT
          - column_name: name
            type: BIGINT
          - column_name: guests
            type: BIGINT
        filter_select_enabled: true
        main_dttm_col: Date
        metrics:
          - expression: COUNT(*)
            metric_name: count
            verbose_name: COUNT(*)
        schema: public
        sql: ""
        table_name: exported_stats
      - columns:
          - column_name: order_date
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: price_each
            type: DOUBLE PRECISION
          - column_name: sales
            type: DOUBLE PRECISION
          - column_name: address_line1
            type: TEXT
          - column_name: address_line2
            type: TEXT
          - column_name: order_line_number
            type: BIGINT
          - column_name: quantity_ordered
            type: BIGINT
          - column_name: order_number
            type: BIGINT
          - column_name: quarter
            type: BIGINT
          - column_name: year
            type: BIGINT
          - column_name: month
            type: BIGINT
          - column_name: msrp
            type: BIGINT
          - column_name: contact_last_name
            type: TEXT
          - column_name: contact_first_name
            type: TEXT
          - column_name: postal_code
            type: TEXT
          - column_name: customer_name
            type: TEXT
          - column_name: deal_size
            type: TEXT
          - column_name: product_code
            type: TEXT
          - column_name: product_line
            type: TEXT
          - column_name: state
            type: TEXT
          - column_name: status
            type: TEXT
          - column_name: city
            type: TEXT
          - column_name: country
            type: TEXT
          - column_name: phone
            type: TEXT
          - column_name: territory
            type: TEXT
        filter_select_enabled: true
        main_dttm_col: order_date
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: cleaned_sales_data
      - columns:
          - column_name: datetime
            expression: ""
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: LAT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: DISTRICT
            expression: ""
            type: DOUBLE PRECISION
          - column_name: CITY
            expression: ""
            type: DOUBLE PRECISION
          - column_name: ID
            expression: ""
            type: DOUBLE PRECISION
          - column_name: REGION
            expression: ""
            type: DOUBLE PRECISION
          - column_name: LON
            expression: ""
            type: DOUBLE PRECISION
          - column_name: radius_miles
            expression: ""
            type: DOUBLE PRECISION
          - column_name: occupancy
            expression: ""
            type: DOUBLE PRECISION
          - column_name: delimited
            expression: ""
            type: VARCHAR(60)
          - column_name: geohash
            expression: ""
            type: VARCHAR(12)
          - column_name: POSTCODE
            expression: ""
            type: BIGINT
          - column_name: NUMBER
            expression: ""
            type: TEXT
          - column_name: STREET
            expression: ""
            type: TEXT
          - column_name: UNIT
            expression: ""
            type: TEXT
        filter_select_enabled: true
        main_dttm_col: datetime
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: long_lat
      - columns:
          - column_name: dttm
            expression: ""
            is_dttm: true
            type: DATE
          - column_name: DEPT_ID
            expression: ""
            type: VARCHAR(10)
          - column_name: "2010"
            expression: ""
            type: BIGINT
          - column_name: "2003"
            expression: ""
            type: BIGINT
          - column_name: "2004"
            expression: ""
            type: BIGINT
          - column_name: "2005"
            expression: ""
            type: BIGINT
          - column_name: "2006"
            expression: ""
            type: BIGINT
          - column_name: "2007"
            expression: ""
            type: BIGINT
          - column_name: "2008"
            expression: ""
            type: BIGINT
          - column_name: "2009"
            expression: ""
            type: BIGINT
          - column_name: "2011"
            expression: ""
            type: BIGINT
          - column_name: "2012"
            expression: ""
            type: BIGINT
          - column_name: "2013"
            expression: ""
            type: BIGINT
          - column_name: "2014"
            expression: ""
            type: BIGINT
        filter_select_enabled: true
        main_dttm_col: dttm
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
          - expression: AVG("2004")
            metric_name: avg__2004
        schema: public
        table_name: birth_france_by_region
      - columns:
          - column_name: updated
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: has_2fa
            type: BOOLEAN
          - column_name: real_name
            type: VARCHAR
          - column_name: tz_label
            type: VARCHAR
          - column_name: team_id
            type: VARCHAR
          - column_name: name
            type: VARCHAR
          - column_name: color
            type: VARCHAR
          - column_name: id
            type: VARCHAR
          - column_name: tz
            type: VARCHAR
          - column_name: is_ultra_restricted
            type: BOOLEAN
          - column_name: is_primary_owner
            type: BOOLEAN
          - column_name: is_app_user
            type: BOOLEAN
          - column_name: is_admin
            type: BOOLEAN
          - column_name: is_bot
            type: BOOLEAN
          - column_name: is_restricted
            type: BOOLEAN
          - column_name: is_owner
            type: BOOLEAN
          - column_name: deleted
            type: BOOLEAN
          - column_name: tz_offset
            type: BIGINT
        filter_select_enabled: true
        main_dttm_col: updated
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: users
      - columns:
          - column_name: num_california
            expression: CASE WHEN state = 'CA' THEN num ELSE 0 END
          - column_name: ds
            expression: ""
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: state
            expression: ""
            type: VARCHAR(10)
          - column_name: gender
            expression: ""
            type: VARCHAR(16)
          - column_name: name
            expression: ""
            type: VARCHAR(255)
          - column_name: num_boys
            expression: ""
            type: BIGINT
          - column_name: num_girls
            expression: ""
            type: BIGINT
          - column_name: num
            expression: ""
            type: BIGINT
        filter_select_enabled: true
        main_dttm_col: ds
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
          - expression: SUM(num)
            metric_name: sum__num
        schema: public
        table_name: birth_names
      - columns:
          - column_name: ts
            is_dttm: true
            type: TIMESTAMP WITHOUT TIME ZONE
          - column_name: client_msg_id
            type: VARCHAR
          - column_name: channel_id
            type: VARCHAR
          - column_name: thread_ts
            type: VARCHAR
          - column_name: latest_reply
            type: VARCHAR
          - column_name: team
            type: VARCHAR
          - column_name: type
            type: VARCHAR
          - column_name: user
            type: VARCHAR
          - column_name: subscribed
            type: BOOLEAN
          - column_name: reply_users_count
            type: BIGINT
          - column_name: reply_count
            type: BIGINT
          - column_name: reply_users
            type: TEXT
          - column_name: blocks
            type: TEXT
          - column_name: text
            type: TEXT
        filter_select_enabled: true
        main_dttm_col: ts
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: threads
      - columns:
          - column_name: year
            is_dttm: true
            python_date_format: "%Y"
            type: BIGINT
          - column_name: global_sales
            type: FLOAT64
          - column_name: na_sales
            type: FLOAT64
          - column_name: other_sales
            type: FLOAT64
          - column_name: eu_sales
            type: FLOAT64
          - column_name: jp_sales
            type: FLOAT64
          - column_name: rank
            type: BIGINT
          - column_name: name
            type: STRING
          - column_name: platform
            type: STRING
          - column_name: publisher
            type: STRING
          - column_name: genre
            type: STRING
        filter_select_enabled: true
        metrics:
          - expression: COUNT(*)
            metric_name: count
            verbose_name: COUNT(*)
        params: '{"remote_id": 64, "database_name": "examples", "import_time": 1606677834}'
        schema: public
        sql: ""
        table_name: video_game_sales
      - columns:
          - column_name: channel_1
            type: STRING
          - column_name: channel_2
            type: STRING
          - column_name: cnt
            type: INT
        filter_select_enabled: true
        metrics:
          - expression: count(*)
            metric_name: count
        schema: public
        sql:
          "SELECT uc1.name as channel_1, uc2.name as channel_2, count(*) AS cnt FROM
          users_channels uc1 JOIN users_channels uc2 ON uc1.user_id = uc2.user_id GROUP
          BY uc1.name, uc2.name HAVING uc1.name <> uc2.name

          "
        table_name: users_channels-uzooNNtSRO
      - columns:
          - column_name: dttm
            expression: ""
            is_dttm: true
            type: DATE
          - column_name: with_missing
            expression: ""
            type: VARCHAR(100)
          - column_name: phrase
            expression: ""
            type: VARCHAR(500)
          - column_name: short_phrase
            expression: ""
            type: VARCHAR(10)
          - column_name: value
            expression: ""
            type: FLOAT
        filter_select_enabled: true
        main_dttm_col: dttm
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: unicode_test
      - columns:
          - column_name: area
            expression: ""
            type: DOUBLE PRECISION
          - column_name: population
            expression: ""
            type: BIGINT
          - column_name: zipcode
            expression: ""
            type: BIGINT
          - column_name: contour
            expression: ""
            type: TEXT
        description: Population density of San Francisco
        filter_select_enabled: true
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: sf_population_polygons
      - columns:
          - column_name: name
            expression: ""
            type: VARCHAR(255)
          - column_name: color
            expression: ""
            type: VARCHAR(255)
          - column_name: path_json
            expression: ""
            type: TEXT
          - column_name: polyline
            expression: ""
            type: TEXT
        description: BART lines
        filter_select_enabled: true
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: bart_lines
      - columns:
          - column_name: ts
            is_dttm: true
            type: DATETIME
          - column_name: name
            type: VAR_STRING
          - column_name: text
            type: BLOB
        filter_select_enabled: true
        metrics:
          - expression: count(*)
            metric_name: count
        schema: public
        sql:
          SELECT m.ts, c.name, m.text FROM messages m JOIN channels c ON m.channel_id
          = c.id
        table_name: messages_channels
      - columns:
          - column_name: channel_name
          - column_name: member_name
        filter_select_enabled: true
        metrics:
          - expression: count(*)
            metric_name: count
        schema: public
        sql:
          SELECT c.name AS channel_name, u.name AS member_name FROM channel_members
          cm JOIN channels c ON cm.channel_id = c.id JOIN users u ON cm.user_id = u.id
        table_name: members_channels_2
      - columns:
          - column_name: date
            is_dttm: true
            type: DATETIME
          - column_name: new_members
            type: LONGLONG
        filter_select_enabled: true
        metrics:
          - expression: count(*)
            metric_name: count
        schema: public
        sql:
          SELECT date, total_membership - lag(total_membership) OVER (ORDER BY date)
          AS new_members FROM exported_stats
        table_name: new_members_daily
      - columns:
          - column_name: channel_id
            type: VARCHAR
          - column_name: user_id
            type: VARCHAR
        filter_select_enabled: true
        metrics:
          - expression: COUNT(*)
            metric_name: count
            metric_type: count
            verbose_name: COUNT(*)
        schema: public
        table_name: channel_members
      - columns:
          - column_name: user_id
            type: STRING
          - column_name: name
            type: STRING
        filter_select_enabled: true
        metrics:
          - expression: count(*)
            metric_name: count
        schema: public
        table_name: users_channels
